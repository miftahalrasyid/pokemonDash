{"version":3,"sources":["PokemonList/PokemonCard.js","PokemonList/PokemonList.js","MyPokemonList/MyPokemonList.js","HomePage/HomePage.js","PokemonDetail/PokemonDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Container","prop","children","className","GET_POKEMON","gql","PokemonCard","dataset","scrollpos","React","useRef","useState","apolloPokemon","setApolloPokemon","pokemonDetail","setPokemonImage","gqlVariables","name","useQuery","variables","error","data","console","log","message","useEffect","pokemon","sprites","front_default","length","other","id","url","split","ref","onClick","ev","sessionStorage","target","parentNode","to","src","alt","GET_POKEMONS","PokemonList","smartscroll","offset","setOffset","limit","setLimit","JSON","parse","apoloData","setApoloData","scrollFetch","setScrollFetch","pokemons","results","data1","stringify","document","querySelector","scrollTop","parseInt","getBoundingClientRect","y","window","innerHeight","onScroll","scrollHeight","offsetHeight","map","item","idx","Fragment","MyPokemonList","useCookies","cookies","setCookie","state","useContext","AppContext","onDeleteClick","getAttribute","mypokemon","del","filter","a","path","remove","session","image","species","types","data-name","SwiperCore","use","EffectCoverflow","Pagination","Navigation","Chatbox","styled","div","props","margin","position","left","right","fontSize","mobile","top","borderRadius","width","height","padding","boxSizing","background","SwiperContainer","PokeCard","HomePage","chatbox","orientation","setOrientation","current","innerHTML","innerWidth","Array","from","forEach","setTimeout","effect","navigation","loop","grabCursor","centeredSlides","slidesPerView","coverflowEffect","GetPokemonDetail","match","overlay","popup","pokemonname","failedPopup","params","type","style","documentElement","setProperty","setPokemonSpecies","setPokemonMoves","moves","setPokemonTypes","dispatch","pokemonMoves","pokemonTypes","pokemonImage","pokemonSpecies","containerItem","el","onSubmit","preventDefault","value","alert","visibility","toString","hash","placeholder","rand","Math","random","move","PokemonDetail","createContext","history","createBrowserHistory","PokeBall","AshBag","Home","App","client","ApolloClient","uri","cache","InMemoryCache","initialState","useReducer","action","ApolloProvider","Provider","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d5ac6eb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './PokemonCard.css';\nimport { gql, useQuery } from '@apollo/client';\n\nexport const Container = (prop) => {\n    const {children} = prop;\n    return (\n    <div className=\"card-container\">\n        {children}\n    </div>\n    )\n}\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name){\n        id\n        name\n        moves {\n          move {\n            name\n          }\n        }\n        species{\n            url\n            name\n        }\n        types {\n            slot\n          type {\n              url\n            name\n          }\n        }\n        sprites{\n            front_default\n          }\n        message\n        status\n      }\n  }\n`;\nconst PokemonCard = (dataset) => {\n    const scrollpos = React.useRef(null);\n    const [apolloPokemon,setApolloPokemon] = React.useState([])\n    const [pokemonDetail, setPokemonDetail] = React.useState([])\n    const [pokemonImage,setPokemonImage] = React.useState(\"\");\n    // React.useEffect(()=>{\n    //     // console.log(dataset.url)\n    //     fetch(dataset.url)\n    //     .then(res=>res.json())\n    //     .then(data=>setPokemonDetail(data));\n    //     // console.log(scrollpos.scrollTop)\n    // },[])\n    let gqlVariables = {\n        name: dataset.name\n    }\n    const {error,data} = useQuery(GET_POKEMON,{\n        variables: gqlVariables\n    })\n    if (error) console.log( `Error! ${error.message}`);\n    // console.log(data);\n    React.useEffect(()=>{\n        // console.log(data?.pokemon || [])\n        setApolloPokemon(data?.pokemon?.sprites?.front_default || [])\n        // console.log(apolloPokemon)\n        // console.log(data?.pokemon?.sprites?.front_default || [])\n    },[data])\n    React.useEffect(()=>{\n        // console.log(dataset.url)\n        if(pokemonDetail.length!==0){\n            // console.log(pokemonDetail)\n\n            // console.log(pokemonDetail.sprites)\n            // console.log(pokemonDetail.sprites.other)\n            // console.log(pokemonDetail.sprites.other['official-artwork'])\n            // console.log(pokemonDetail.sprites.other['official-artwork'].front_default)\n            setPokemonImage(pokemonDetail?.sprites.other['official-artwork'].front_default)\n        }\n    },[pokemonDetail])\n    const onSelectedClick = (ev) =>{\n        // console.log(\"target\")\n        // console.log(ev.target.parentNode.parentNode.id)\n        // console.log(ev.target.parentNode.parentNode.id.split('/'))\n        // console.log(ev.target.getBoundingClientRect().y)\n        sessionStorage['myScroll'] = ev.target.parentNode.parentNode.id.split('/');\n        // sessionStorage['myScroll'] = ev.target.getBoundingClientRect().y;\n    }\n    if(dataset){\n        // console.log(dataset)\n        \n        return (\n                <div className=\"card-container\" id={\"card-\"+dataset.url.split(\"/\")[6]} ref={scrollpos} onClick={onSelectedClick}>\n                    \n                    <Link to={\"/pokemon/\"+dataset.name}><img src={apolloPokemon} alt={apolloPokemon}/><p>{dataset.name}</p></Link>\n                    {/* <Route path=\"/pokemon/:type\" component={GetPokemonDetail}/> */}\n                </div>\n        )\n    }\n    return {Container}\n};\n\nexport default PokemonCard;","import React from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n// import PokemonCard,{Container} from \"./PokemonCard\";\nimport \"./PokemonList.css\";\n// import {Link} from \"react-router-dom\";\nimport { gql, useQuery } from '@apollo/client';\n// const Test = (data) =>{\n//     return <h3>test</h3>\n// }\n// window.addEventListener(\"beforeunload\", function(){\n//     localStorage.removeItem(\"myKey\");\n// });\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nexport const PokemonList = () => {\n\n    const FETCH_LIMIT = 20;\n    // let data1 = []\n    const smartscroll = React.useRef(null);\n    const [offset, setOffset] = React.useState(0);\n    const [limit, setLimit] = React.useState(FETCH_LIMIT);\n    const [apoloData,setApoloData] = React.useState(JSON.parse(sessionStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState(JSON.parse(sessionStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState(JSON.parse(localStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState( []);\n    const [scrollFetch,setScrollFetch] = React.useState(false);\n    // const [populate,setPopulate] = React.useState([<Test/>]);\n    // var data2 = []\n    // const Populate = () =>{\n    //     return(populate)\n    // }\n    const gqlVariables = {\n        limit: limit,\n        offset: offset,\n      };\n    const { data } = useQuery(GET_POKEMONS, {\n    // const { loading, error, data } = useQuery(GET_POKEMONS, {\n        variables: gqlVariables,\n    });\n    // if (loading) return 'Loading...';\n    // if (error) return `Error! ${error.message}`;\n    // console.log('Response from server', data);\n    React.useEffect(()=>{\n        // setApoloData(data?.pokemons?.results || []);\n        if(data?.pokemons?.results){\n            let data1 = []; \n            // console.log(dataFetch.length < limit)\n            // console.log(sessionStorage['myKey'])\n            // console.log(limit > apoloData.length)\n            // console.log(data?.pokemons?.results)\n            if(limit > apoloData.length){\n                data1 = [...apoloData,...data?.pokemons?.results]\n                setApoloData(data1);\n                sessionStorage['myKey'] = JSON.stringify(data1);\n                \n            }\n            setScrollFetch(true);\n        }\n        // console.log(apoloData)\n        // console.log(data?.pokemons?.results || [])\n    },[data,limit,apoloData])\n    \n    React.useEffect(()=>{\n        \n        // console.log(document.querySelector(\".content\").scrollTop)\n        // console.log(sessionStorage['myScroll'])\n        document.querySelector(\".content\").scrollTop = parseInt(document.querySelector(\"#\"+sessionStorage['myScroll'])?.getBoundingClientRect()?.y || 0);\n        // console.log(document.querySelector(\"#\"+sessionStorage['myScroll'])?.getBoundingClientRect()?.y || 0 -parseInt(window.innerHeight))\n        // console.log(parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight))\n        document.querySelector(\".content\").scrollTop = parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight)/4;\n        // smartscroll.scrollTop = sessionStorage['myScroll'];\n    },[]);\n    // React.useEffect(()=>{\n    //     fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\n    //     .then(res=>res.json())\n    //     .then(data=>{\n    //         // console.log(dataFetch)\n    //         // data1 = [...dataFetch,...data.results];\n    //         let data1 = []; \n    //         // console.log(dataFetch.length < limit)\n    //         // console.log(sessionStorage['myKey'])\n    //         if(limit > dataFetch.length){\n    //             data1 = [...dataFetch,...data.results]\n    //             setDataFetch(data1);\n    //             sessionStorage['myKey'] = JSON.stringify(data1);\n    //         }\n    //         // console.log(JSON.parse(sessionStorage['myKey'] || '[]'))\n    //         // console.log(dataFetch)\n\n    //         // localStorage.clear();\n    //         // sessionStorage.clear();\n    //         // let distinct = [...new Set(data1.map(a=>a.name))];\n    //         // sessionStorage['myKey'] = JSON.stringify(distinct);\n    //     // console.log(JSON.parse(localStorage['myKey']))\n\n    //         // console.log(data1)\n    //         // setDataFetch([...dataFetch, data.results]);\n    //         setScrollFetch(true);\n    //     });\n    // },[limit])\n    // },[scrollFetch])\n  \n    // React.useEffect(()=>{\n    //     // var card = <PokemonCard dataset={data.name}/>\n    //     for(let i=0; i<dataFetch.length; i++){\n    //         data2 = [...data2,<PokemonCard {...dataFetch[i]}/>];\n    //         // data2 = [...data2,<PokemonCard dataset={data.name}/>];\n    //     }\n    //     setPopulate(data2);\n    //     // Populate({pokemondata: data2})\n    //     console.log(dataFetch)\n    // },[dataFetch])\n    const onPageScroll = (ev) => {\n        // console.log(sessionStorage['myScroll'])\n        // console.log(document.querySelector(\"#\"+sessionStorage['myScroll']))\n        // console.log(ev)\n        /**scroll value */\n        // console.log(ev.target.scrollTop)\n        // ev.target.scrollTop = parseInt(ev.target.scrollTop)-parseInt(window.innerHeight)\n        /**scroll position */\n        // sessionStorage['myScroll'] = ev.target.scrollTop ;\n        // console.log(sessionStorage['myScroll']) ;\n        /** available scroll */\n        // console.log(ev.target.scrollHeight-ev.target.offsetHeight)\n        // console.log((ev.target.scrollHeight-ev.target.offsetHeight)/2)\n        if(ev.target.scrollTop > (ev.target.scrollHeight-ev.target.offsetHeight)/2 && scrollFetch){\n            // let \n            // fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50\")\n            // .then(res=>res.json())\n            // .then(data=>setDataFetch(data.results));\n            setOffset(offset+FETCH_LIMIT);\n            setLimit(limit+FETCH_LIMIT);\n            setScrollFetch(false);\n\n        }\n    };\n    // console.log(Container)\n    return(\n        <div className=\"pokedex\">\n        <h1 className=\"title\">PokeDex</h1>\n        {/* <div className=\"main-header\">\n          <nav>\n            <ul>\n              <li><Link to=\"/\"><img src=\"/images/pokeball.png\" alt=\"pokeball\"/></Link></li>\n              \n              <li><Link to=\"/my-pokemon\">My Pokemon</Link></li>\n            </ul>\n          </nav>\n        </div> */}\n        <section className=\"content\" ref={smartscroll} onScroll={onPageScroll}>\n            {apoloData.map((item,idx)=>{\n                return(\n                    <React.Fragment key={idx}>\n                        <PokemonCard {...item} />\n                        {/* <hr/> */}\n                    </React.Fragment>\n                )\n            })}\n        </section>\n        {/* <Populate/> */}\n        \n        {/* <PokemonCard dataset={{name: \"miftah\", type:\"water\"}}/> */}\n            {/* <Container> */}\n                {/* test */}\n            {/* </Container> */}\n        </div>\n    );\n}","import React from \"react\";\nimport {AppContext} from \"../App\";\nimport {useCookies} from \"react-cookie\";\nimport './MyPokemonList.css';\n\n\nexport const MyPokemonList = () => {\n    const [cookies,setCookie] = useCookies(['name',\"mypokemon\"]);\n  \n    const {state} = React.useContext(AppContext);\n    // const {state,dispatch} = React.useContext(AppContext);\n    console.log(state)\n    const onDeleteClick = (ev) => {\n        console.log(ev.target.getAttribute('data-name'))\n        console.log(cookies.mypokemon)\n        // console.log(cookies.mypokemon)\n        var del = cookies.mypokemon.filter(a=>a.name!==ev.target.getAttribute('data-name'))\n        setCookie(\"mypokemon\",JSON.stringify(del),{path:\"/\"})\n        // dispatch({type:\"set\",hash: del})\n        ev.target.parentNode.remove();\n    }\n    React.useEffect(()=>{\n\n    },[state.session])\n    return(\n        <div className=\"my-pokemon\">\n        <h1>My Pokemon</h1>\n        <div className=\"all-my-collection\">\n\n        {state.session ? state.session.map(({name,image,species,types},idx) => {\n            return (\n                <div className=\"pokemon-collection\" key={\"div\"+idx}>\n                    <div className=\"img-container\">\n                        <img src={image} alt={\"test\"}/>\n                        <p key={\"name\"+idx}>{name}</p>\n                    </div>\n                    <div>\n                        <p key={idx}>Species: {species}</p>\n                        <p key={\"species\"+idx}>Types: {types}</p>\n                    </div>\n                <button key={idx+name} data-name={name} onClick={onDeleteClick} > Release</button>\n                </div>\n            );\n        }) : null}\n        </div>\n        \n        </div>\n    )\n}","import \"./HomePage.css\";\nimport styled from \"@emotion/styled\"\nimport React from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/swiper.min.css\";\nimport \"swiper/components/effect-coverflow/effect-coverflow.min.css\"\nimport \"swiper/components/pagination/pagination.min.css\";\nimport \"swiper/components/navigation/navigation.min.css\"\n\n// import Swiper core and required modules\nimport SwiperCore, {\n    EffectCoverflow,Pagination,Navigation\n  } from 'swiper/core';\n\n  SwiperCore.use([EffectCoverflow,Pagination,Navigation]);\n\nconst Chatbox = styled.div(props=>({\n    margin: \"auto\",\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    fontSize: !props.mobile ? \"inherit\": \"2vh\",\n    top: !props.mobile ? \"72vh\": \"38vh\",\n    borderRadius: \"14px\",\n    width: !props.mobile ? \"35vw\" : \"75vw\",\n    height: !props.mobile ? \"10.8vw\" : \"23.2vw\",\n    padding: !props.mobile ? \"1.4rem\" : \"1rem\",\n    boxSizing: \"border-box\",\n    background: !props.mobile ? \"url(/images/chatbox.png) 0 0/35vw auto no-repeat,white 0 0/40px 26px\" : \"url(/images/chatbox.png) 0 0/75vw auto no-repeat,white 0 0/40px 26px\"\n}))\nconst SwiperContainer = styled.div(props=>({\n    // margin: \"auto\",\n    position: \"absolute\",\n    // left: 0,\n    // right: 0,\n    // top: !props.mobile ? \"62vh\": \"35vh\",\n    // borderRadius: \"14px\",\n    // background: \"url(/images/chatbox.png) 0 0 / 300px auto no-repeat\",\n    width: !props.mobile ? \"100%\" : \"75vw\",\n    height: !props.mobile ? \"250px\" : \"23.2vw\",\n    // padding: !props.mobile ? \"1.4rem\" : \"1rem\",\n    // boxSizing: \"border-box\",\n    // background: !props.mobile ? \"url(/images/chatbox.png) 0 0/55vw auto no-repeat,white 0 0/40px 26px\" : \"url(/images/chatbox.png) 0 0/75vw auto no-repeat,white 0 0/40px 26px\"\n}))\nconst PokeCard = styled.div(props=>({\n    background: \"linear-gradient(#0bad5c,#CE1F6A,#004e47)\",\n    // background: \"linear-gradient(#CE1F6A,#ce1f90,#e2176282)\",\n    // background: \"linear-gradient(#CE1F6A,#ce1f70,#e2171782)\",\n    // background: \"radial-gradient(pink,#CE1F6A)\",\n    // background: \"#CE1F6A\",\n    width:\"100%\",\n    height:\"100%\"\n}))\nexport const HomePage = () => {\n    const chatbox = React.useRef(null);\n    const chatstring = \"Welcome pokemon catchers! Find your favorite pokemon on the PokeBall and collect them all into your Bag!\";\n    const [orientation, setOrientation] = React.useState(true);\n    React.useEffect(()=>{\n        chatbox.current.innerHTML = \" \";\n        if(window.innerWidth > window.innerHeight){\n            setOrientation(false)\n        }\n        // console.log(Array.from(chatstring))\n        // console.log(chatbox.current.innerHTML)\n        Array.from(chatstring).forEach((item,idx)=>{\n            setTimeout(()=>{\n                if(chatbox?.current?.innerHTML || false)\n                chatbox.current.innerHTML += item\n            },70 * idx)\n        })\n        // .then(()=>{\n        //     console.log(\"complete\")\n        // });\n    },[chatbox])\n    return (\n        <div className=\"homepage\">\n            {/* <img className=\"logo\" src=\"/images/logo.png\" alt=\"logo\"/> */}\n            <div className=\"title-container\">\n\n            <h1 className=\"title\">PokéMon Center</h1>\n            </div>\n            <section className=\"billboard\">\n                <img src=\"/images/homeImge.png\" alt=\"homeImage\"/>\n                {/* <img src=\"/images/chatbox.png\" alt=\"chatbox\"/> */}\n                {/* <div className=\"chatbox\"></div> */}\n                <Chatbox ref={chatbox} mobile={orientation}> </Chatbox>\n                <div>\n\n                </div>\n            </section>\n            <section className=\"drawer\">\n                <h2 className=\"most-popular\">Most Popular Pokemon</h2>\n            <SwiperContainer>\n                {/* <Swiper effect={'coverflow'} navigation={true} grabCursor={true} centeredSlides={false} slidesPerView={'auto'} coverflowEffect={{\n                \"rotate\": 50,\n                \"stretch\": 0,\n                \"depth\": 100,\n                \"modifier\": 1,\n                \"slideShadows\": true\n                }} pagination={true}  className=\"mySwiper\">\n                <SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-1.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-2.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-3.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-4.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-5.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-6.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-7.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-8.jpg\" /></SwiperSlide><SwiperSlide><img src=\"https://swiperjs.com/demos/images/nature-9.jpg\" /></SwiperSlide>\n                </Swiper> */}\n                <Swiper effect={\"coverflow\"} navigation={true} loop={true} grabCursor={true} centeredSlides={false} slidesPerView={'auto'} coverflowEffect={{\n                \"rotate\": 50,\n                \"stretch\": 0,\n                \"depth\": 100,\n                \"modifier\": 1,\n                \"slideShadows\": false\n                }} className=\"mySwiper\">\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"greninja\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/658.png\" />\n                    <p>GRENINJA</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"Lucario\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/448.png\" />\n                    <p>Lucario</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"charizard\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png\" />\n                    <p>Charizard</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"umbreon\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/197.png\" />\n                    <p>Umbreon</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"slyveon\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/700.png\" />\n                    <p>Sylveon</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"garchomp\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/445.png\" />\n                    <p>Garchomp</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"rayquaza\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/384.png\" />\n                    <p>Rayquaza</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"gardevoir\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/282.png\" />\n                    <p>Gardevoir</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"gengar\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/94.png\" />\n                    <p>Gengar</p>\n                    </PokeCard>\n                </SwiperSlide>\n                <SwiperSlide>\n                    <PokeCard>\n                    <img alt=\"dragapult\" className=\"card-img\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/887.png\" />\n                    <p>Dragapult</p>\n                    </PokeCard>\n                </SwiperSlide>\n                </Swiper>\n            </SwiperContainer>\n            </section>\n        </div>\n    );\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {AppContext} from \"../App\";\nimport './PokemonDetail.css';\n// import {useCookies} from \"react-cookie\";\n// import styled from '@emotion/styled'\nimport { gql, useQuery } from '@apollo/client';\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name){\n        id\n        name\n        moves {\n          move {\n            name\n          }\n        }\n        species{\n            url\n            name\n        }\n        types {\n            slot\n          type {\n              url\n            name\n          }\n        }\n        sprites{\n            front_default\n          }\n        message\n        status\n      }\n  }\n`;\n\nexport const GetPokemonDetail = (prop) => {\n    const {match} = prop;\n    let overlay = React.useRef(null);\n    let popup = React.useRef(null);\n    let pokemonname = React.useRef(null);\n    let failedPopup = React.useRef(null);\n    // const [apolloPokemon,setApolloPokemon] = React.useState([])\n    // console.log(match.params.type)\n    let gqlVariables = {\n        name: match.params.type\n    }\n    const {error,data} = useQuery(GET_POKEMON,{\n        variables: gqlVariables\n    })\n    if (error) console.log( `Error! ${error.message}`);\n    \n    React.useEffect(()=>{\n        // console.log(data?.pokemon || [])\n        // setApolloPokemon(data?.pokemon || [])\n        // console.log(apolloPokemon)\n        // console.log(data?.pokemon?.sprites?.front_default || [])\n        if(data?.pokemon || false){\n            if(window.innerWidth < window.innerHeight)\n            document.querySelector(\".details\").style.height= \"36vh\";\n            else\n            document.querySelector(\".details\").style.width= document.documentElement.style.setProperty('--details-width', 32 + \"vw\");\n            setPokemonSpecies(data?.pokemon?.species?.name || \"\");\n            setPokemonImage(data?.pokemon?.sprites?.front_default || \"\")\n            setPokemonMoves(data?.pokemon?.moves || [])\n            setPokemonTypes(data?.pokemon?.types || [])\n        }\n    },[data])\n    // const [cookies] = useCookies(['name',\"mypokemon\"]);\n  \n    const {dispatch,cookies} = React.useContext(AppContext)\n    // const [pokemonDetail,setPokemonDetail] = React.useState(null)\n    const [pokemonMoves,setPokemonMoves] = React.useState(null)\n    const [pokemonTypes,setPokemonTypes] = React.useState(null)\n    const [pokemonImage,setPokemonImage] = React.useState(null)\n    const [pokemonSpecies,setPokemonSpecies] = React.useState(null)\n    // const [randomNumber, setRandomNumber] = React.useState(false)\n    const gotchaClick = (ev) =>{\n        ev.preventDefault();\n        // console.log(cookies?.mypokemon?.filter(a=>a.name===pokemonname.value) || [])\n        if(((cookies?.mypokemon?.filter( a=>a.species===pokemonSpecies).length || []) > 0 && \n        (cookies?.mypokemon?.filter( a=>a.name===pokemonname.value).length || []) > 0) || pokemonname.value===\"\"){\n            if( pokemonname.value===\"\"){\n                alert(\"Name cannot be empty\")\n                return;\n            }\n            \n            alert(\"Please use another name\")\n        }\n        else if(pokemonname.value.length > 10 || false){\n            alert(\"Name length must be less than 10 character\")\n        }\n        else{\n            overlay.style.background = \"rgba(0,0,0,0)\";\n            overlay.style.visibility= \"hidden\";\n            popup.style.visibility= \"hidden\";\n            // console.log(pokemonTypes.map((item)=>item.type.name))\n            dispatch({type: \"myPokemon\", types: pokemonTypes.map((item)=>item.type.name).toString(),species:pokemonSpecies, image:pokemonImage, hash: pokemonname.value});\n        }\n        // console.log(cookies.mypokemon.name.indexOf(pokemonname.value))\n    }\n    const failedClick = (ev) =>{\n        ev.preventDefault();\n        // console.log(cookies.mypokemon.filter(a=>a.name===pokemonname.value))\n        overlay.style.background = \"rgba(0,0,0,0)\";\n        overlay.style.visibility= \"hidden\";\n        failedPopup.style.visibility= \"hidden\";\n        // console.log(cookies.mypokemon.name.indexOf(pokemonname.value))\n    }\n    const catchItClick = () =>{\n        console.log(\"catchit click\");\n        /** 50% chance to get the item */\n        const rand = Math.random() < 0.5\n        console.log(rand)\n        // setRandomNumber(Math.random() < 0.5)\n        if(rand){\n            /**get the pokemon */\n            // console.log(\"how many\")\n            popup.style.visibility = \"visible\";\n            overlay.style.visibility= \"visible\";\n            overlay.style.background = \"rgba(0,0,0,0.7)\";\n            // dispatch({type: \"myPokemon\", image:pokemonImage, hash: prompt(\"Congratulation, You catch the Pokemon!\", \"What do you want to name it?\")});\n            // dispatch({type: \"myPokemon\", hash: \"What do you want to name it?\"});\n        }\n        else{\n            /** didn't get the pokemon */\n            failedPopup.style.visibility = \"visible\";\n            overlay.style.visibility= \"visible\";\n            overlay.style.background = \"rgba(0,0,0,0.7)\";\n        }\n    }\n    // React.useEffect(()=>{\n    //     if(randomNumber){\n    //         /**get the pokemon */\n    //         console.log(\"how many\")\n    //         dispatch({type: \"myPokemon\", hash: prompt(\"Congratulation, You catch the Pokemon!\", \"What do you want to name it?\")});\n    //         // dispatch({type: \"myPokemon\", hash: \"What do you want to name it?\"});\n    //     }\n    //     else{\n    //         /** didn't get the pokemon */\n    //     }\n    // },[randomNumber])\n    let containerItem = React.useRef(null);\n    // const [value, setValue] = React.useState(\"\");\n    // const Element = ({animate}) =>{\n        \n    // }\n\n    // React.useEffect(()=>{\n    //     console.log(match)\n    //     if(match)\n    //     fetch(\"https://pokeapi.co/api/v2/pokemon/\"+match.params.type)\n    //     .then(res=>res.json())\n    //     .then(data=>{\n    //         setPokemonDetail(data)\n    //         if(window.innerWidth < window.innerHeight)\n    //         document.querySelector(\".details\").style.height= \"36vh\";\n    //         else\n    //         document.querySelector(\".details\").style.width= document.documentElement.style.setProperty('--details-width', 32 + \"vw\");\n    //     });\n    // },[match])\n    // React.useEffect(()=>{\n    //     console.log(pokemonDetail)\n    //     if(pokemonDetail){\n    //         setPokemonSpecies(pokemonDetail.species.name);\n    //         setPokemonImage(pokemonDetail.sprites.other['official-artwork'].front_default)\n    //         setPokemonMoves(pokemonDetail.moves)\n    //         setPokemonTypes(pokemonDetail.types)\n    //     }\n    //     // containerItem.style.height= \"36vh\";\n    //     // document.querySelector(\".details\").style.height= \"36vh\";\n    // },[pokemonDetail])\n\n    // console.log(containerItem)\n        // console.log(animate);\n        React.useEffect(()=>{\n            // console.log(\"render\")\n            if(document.querySelector(\".details\")){\n                // animate = \"false\";\n                // containerItem.setAttribute(\"animated\",\"true\")\n                if(window.innerWidth < window.innerHeight)\n                containerItem.style.height= \"36vh\";\n                else\n                containerItem.style.width= document.documentElement.style.setProperty('--details-width', 32 + \"vw\");\n            }\n            // setValue({height: \"26vh\"})\n        },[])\n    return (\n        <>\n        {match ? <div className=\"details-container\">\n            \n            <Link to=\"/pokedex\"><img className=\"back-btn\" src=\"/images/left-arrow.png\" alt=\"close-btn\"/></Link>\n            \n        <h1>{match ? match.params.type : null}</h1>\n            <img className=\"detail-img\" src={pokemonImage} alt={match.params.type+\".png\"}/>\n            <div className=\"overlay\" ref={el => overlay = el}>\n                <div className=\"popup\" ref={el => popup = el}>\n                    <form onSubmit={gotchaClick}>\n                        <h2>Gotcha!</h2>\n                        <input ref={el => pokemonname = el} placeholder=\"Please enter a name!\"/>\n                        <input type=\"submit\"/>\n                    </form>\n                </div>\n                <div className=\"failedpopup\" ref={el => failedPopup = el}>\n                    <form onSubmit={failedClick}>\n                        <h2>PokeBall Failed</h2>\n                        <input type=\"submit\" value=\"dismiss\"/>\n                    </form>\n                </div>\n            </div>\n        <div className=\"details\" ref={el => {containerItem = el}}>\n            {/* <div className=\"color-block\"></div> */}\n            {/* <h2></h2> */}\n            <div className=\"catch-container\" >\n                <button onClick={catchItClick}><h3>Catch it!</h3></button>\n            </div>\n            <h3>Types</h3>\n            {pokemonTypes ? pokemonTypes.map((item,idx)=>{\n                return (\n                    <p key={idx}>{item.type.name}</p>\n                );\n            }) : null}\n            <h3>Moves</h3>\n            {pokemonMoves ? pokemonMoves.map((item,idx)=>{\n                return (\n                    <p key={idx}>{item.move.name}</p>\n                );\n            }) : null}\n\n        </div>\n        </div> : null}\n        </>\n    )\n}\nexport const PokemonDetail = () => {\n    return(\n        <>\n        {/* <h1>Pokemon Detail</h1>\n        <GetPokemonDetail/> */}\n        </>\n    )\n};\n","import React from \"react\";\n// import logo from './logo.svg';\nimport './Shared/Shared.css';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport {createBrowserHistory} from \"history\";\nimport {PokemonList} from \"./PokemonList\";\nimport {MyPokemonList} from \"./MyPokemonList\";\nimport {HomePage} from \"./HomePage\"\nimport { PokemonDetail,GetPokemonDetail } from \"./PokemonDetail\";\nimport {useCookies} from \"react-cookie\";\nimport styled from \"@emotion/styled\";\nimport { ApolloProvider,ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nexport const AppContext = React.createContext({});\n\nconst history = createBrowserHistory();\nconst PokeBall = styled.div(props=> ({\n  width: \"14vw\",\n  margin: props.mobile ? \"0 0vw\" : \"0\",\n    height: \"10.7vh\",\n    background: `url(/images/pokeball.png) 50% 50%/auto 7.7vh no-repeat`\n    // background: `${!props.mobile ? \"url(/images/pokeball-pink.png)\" : \"url(/images/pokeball.png)\"} 50% 50%/auto 7.7vh no-repeat`\n}))\nconst AshBag = styled.div(props=> ({\n  width: \"14vw\",\n  margin: props.mobile ? \"0 0vw\" : \"0\",\n  height: \"10.7vh\",\n    background: `url(/images/bag.png) 50% 50%/ auto 7.7vh no-repeat`\n    // background: `${!props.mobile ? \"url(/images/bag-pink.png)\" : \"url(/images/bag.png)\"} 50% 50%/ auto 7.7vh no-repeat`\n}))\nconst Home = styled.div(props=> ({\n  width: props.mobile ? \"14vw\":\"4rem\",\n  margin: props.mobile ? \"0 12vw\" : \"0\",\n  height: \"10.7vh\",\n    background: `url(/images/home.png) 50% 50%/ auto 7.7vh no-repeat`\n    // background: `${!props.mobile ? \"url(/images/bag-pink.png)\" : \"url(/images/bag.png)\"} 50% 50%/ auto 7.7vh no-repeat`\n}))\n// const HeaderStyle = styled.div(props=> ({\n//   background: !props.mobile ? \"#CE1F6A\":\"transparent\" \n// }))\n\n\nfunction App() {\n  const client = new ApolloClient({\n    uri: \"https://graphql-pokeapi.vercel.app/api/graphql\",\n    cache: new InMemoryCache()\n  });\n  const [orientation,setOrientation] = React.useState(true)\n  const [cookies,setCookie] = useCookies(['name',\"mypokemon\"]);\n  // console.log(\"der\")\n  React.useEffect(()=>{\n    console.log(window.innerHeight)\n    console.log(window.innerWidth)\n    if(window.innerWidth > window.innerHeight)\n    setOrientation(false)\n    console.log(cookies.mypokemon)\n    if(!cookies.mypokemon){\n      // setCookie('mypokemon',[],{path:'/'})\n      dispatch({type: \"set\", hash: []});\n    }\n    console.log(cookies.mypokemon)\n  },[cookies.mypokemon])\n  var initialState = {\n    session: cookies.mypokemon\n  };\n\n  \n  const reducer = (state,action) => {\n    switch (action.type) {\n      case \"myPokemon\":\n        // console.log(\"mypokemon\")\n        // const filter = state.session.filter((a)=>a);\n        setCookie('mypokemon',JSON.stringify([...state.session,{types: action.types,species: action.species,image: action.image, name: action.hash}]),{path:'/'})\n        // console.log(cookies.mypokemon)\n        // return {...state,session: action.hash}\n        return {...state,session:[...state.session,{types: action.types,species: action.species,image: action.image, name: action.hash}]}\n      case \"set\":\n        // console.log(action.hash)\n        // setCookie('mypokemon',JSON.stringify(action.hash),{path:'/'})\n        return {...state,session:action.hash}\n      default:\n        return state;\n    }\n  }\n  const [state,dispatch] = React.useReducer(reducer,initialState)\n  return (\n    <ApolloProvider client={client}>\n\n    <AppContext.Provider value={{state,dispatch,cookies}}>\n      <Router history={history}>\n        <div className=\"main-header\">\n          <nav>\n            <ul>\n              <li><Link to=\"/pokedex\">\n                {/* <img src=\"/images/pokeball.png\" alt=\"pokeball\"/> */}\n                <PokeBall className=\"pokeball\" mobile={orientation}></PokeBall>\n                </Link>\n              </li>\n              <li><Link to=\"/\">\n                <Home  mobile={orientation}></Home>\n                {/* <img src=\"/images/pokeball.png\" alt=\"pokeball\"/> */}\n               \n                </Link>\n              </li>\n              {/* {orientation ? <hr/> : null} */}\n              <li>\n                <Link to=\"/my-pokemon\">\n                  {/* <img src=\"/images/bag.png\" alt=\"bag\"/> */}\n                <AshBag className=\"bag\" mobile={orientation}></AshBag>\n                  </Link></li>\n            </ul>\n          </nav>\n        </div>\n        <Route path=\"/pokedex\" component={PokemonList}></Route>\n        <Route path=\"/my-pokemon\" component={MyPokemonList}></Route>\n        <Route exact path=\"/\" component={HomePage}></Route>\n        <Route path=\"/pokemon\" component={PokemonDetail}></Route>\n        <Route path=\"/pokemon/:type\" component={GetPokemonDetail}/>\n      </Router>\n    </AppContext.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}