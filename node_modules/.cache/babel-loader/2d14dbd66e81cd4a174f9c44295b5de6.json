{"ast":null,"code":"import { __assign, __extends } from \"tslib\";\nimport \"./fixPolyfills.js\";\nimport { dep, wrap } from 'optimism';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { defaultDataIdFromObject, Policies } from \"./policies.js\";\nimport { hasOwn } from \"./helpers.js\";\nvar defaultConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  typePolicies: {}\n};\n\nvar InMemoryCache = function (_super) {\n  __extends(InMemoryCache, _super);\n\n  function InMemoryCache(config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.watches = new Set();\n    _this.typenameDocumentCache = new Map();\n    _this.makeVar = makeVar;\n    _this.txCount = 0;\n    _this.maybeBroadcastWatch = wrap(function (c, fromOptimisticTransaction) {\n      return _this.broadcastWatch.call(_this, c, !!fromOptimisticTransaction);\n    }, {\n      makeCacheKey: function (c) {\n        var store = c.optimistic ? _this.optimisticData : _this.data;\n\n        if (supportsResultCaching(store)) {\n          var optimistic = c.optimistic,\n              rootId = c.rootId,\n              variables = c.variables;\n          return store.makeCacheKey(c.query, c.callback, JSON.stringify({\n            optimistic: optimistic,\n            rootId: rootId,\n            variables: variables\n          }));\n        }\n      }\n    });\n    _this.watchDep = dep();\n    _this.config = __assign(__assign({}, defaultConfig), config);\n    _this.addTypename = !!_this.config.addTypename;\n    _this.policies = new Policies({\n      cache: _this,\n      dataIdFromObject: _this.config.dataIdFromObject,\n      possibleTypes: _this.config.possibleTypes,\n      typePolicies: _this.config.typePolicies\n    });\n    _this.data = new EntityStore.Root({\n      policies: _this.policies,\n      resultCaching: _this.config.resultCaching\n    });\n    _this.optimisticData = _this.data;\n    _this.storeWriter = new StoreWriter(_this, _this.storeReader = new StoreReader({\n      cache: _this,\n      addTypename: _this.addTypename\n    }));\n    return _this;\n  }\n\n  InMemoryCache.prototype.restore = function (data) {\n    if (data) this.data.replace(data);\n    return this;\n  };\n\n  InMemoryCache.prototype.extract = function (optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return (optimistic ? this.optimisticData : this.data).extract();\n  };\n\n  InMemoryCache.prototype.read = function (options) {\n    var _a = options.returnPartialData,\n        returnPartialData = _a === void 0 ? false : _a;\n\n    try {\n      return this.storeReader.diffQueryAgainstStore({\n        store: options.optimistic ? this.optimisticData : this.data,\n        query: options.query,\n        variables: options.variables,\n        rootId: options.rootId,\n        config: this.config,\n        returnPartialData: returnPartialData\n      }).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        return null;\n      }\n\n      throw e;\n    }\n  };\n\n  InMemoryCache.prototype.write = function (options) {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore({\n        store: this.data,\n        query: options.query,\n        result: options.result,\n        dataId: options.dataId,\n        variables: options.variables\n      });\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.modify = function (options) {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      return false;\n    }\n\n    var store = options.optimistic ? this.optimisticData : this.data;\n\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.diff = function (options) {\n    return this.storeReader.diffQueryAgainstStore({\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      query: options.query,\n      variables: options.variables,\n      returnPartialData: options.returnPartialData,\n      config: this.config\n    });\n  };\n\n  InMemoryCache.prototype.watch = function (watch) {\n    var _this = this;\n\n    if (!this.watches.size) {\n      recallCache(this);\n    }\n\n    this.watches.add(watch);\n\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n\n    return function () {\n      if (_this.watches.delete(watch) && !_this.watches.size) {\n        forgetCache(_this);\n      }\n\n      _this.watchDep.dirty(watch);\n\n      _this.maybeBroadcastWatch.forget(watch);\n    };\n  };\n\n  InMemoryCache.prototype.gc = function () {\n    return this.optimisticData.gc();\n  };\n\n  InMemoryCache.prototype.retain = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  };\n\n  InMemoryCache.prototype.release = function (rootId, optimistic) {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  };\n\n  InMemoryCache.prototype.identify = function (object) {\n    return isReference(object) ? object.__ref : this.policies.identify(object)[0];\n  };\n\n  InMemoryCache.prototype.evict = function (options) {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        return false;\n      }\n\n      options = __assign(__assign({}, options), {\n        id: \"ROOT_QUERY\"\n      });\n    }\n\n    try {\n      ++this.txCount;\n      return this.optimisticData.evict(options);\n    } finally {\n      if (! --this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  };\n\n  InMemoryCache.prototype.reset = function () {\n    this.data.clear();\n    this.optimisticData = this.data;\n    this.broadcastWatches();\n    return Promise.resolve();\n  };\n\n  InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n    var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  };\n\n  InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n    var _this = this;\n\n    var perform = function (layer) {\n      var _a = _this,\n          data = _a.data,\n          optimisticData = _a.optimisticData;\n      ++_this.txCount;\n\n      if (layer) {\n        _this.data = _this.optimisticData = layer;\n      }\n\n      try {\n        transaction(_this);\n      } finally {\n        --_this.txCount;\n        _this.data = data;\n        _this.optimisticData = optimisticData;\n      }\n    };\n\n    var fromOptimisticTransaction = false;\n\n    if (typeof optimisticId === 'string') {\n      this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);\n      fromOptimisticTransaction = true;\n    } else if (optimisticId === null) {\n      perform(this.data);\n    } else {\n      perform();\n    }\n\n    this.broadcastWatches(fromOptimisticTransaction);\n  };\n\n  InMemoryCache.prototype.transformDocument = function (document) {\n    if (this.addTypename) {\n      var result = this.typenameDocumentCache.get(document);\n\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        this.typenameDocumentCache.set(result, result);\n      }\n\n      return result;\n    }\n\n    return document;\n  };\n\n  InMemoryCache.prototype.broadcastWatches = function (fromOptimisticTransaction) {\n    var _this = this;\n\n    if (!this.txCount) {\n      this.watches.forEach(function (c) {\n        return _this.maybeBroadcastWatch(c, fromOptimisticTransaction);\n      });\n    }\n  };\n\n  InMemoryCache.prototype.broadcastWatch = function (c, fromOptimisticTransaction) {\n    this.watchDep.dirty(c);\n    this.watchDep(c);\n    var diff = this.diff({\n      query: c.query,\n      variables: c.variables,\n      optimistic: c.optimistic\n    });\n\n    if (c.optimistic && fromOptimisticTransaction) {\n      diff.fromOptimisticTransaction = true;\n    }\n\n    c.callback(diff);\n  };\n\n  return InMemoryCache;\n}(ApolloCache);\n\nexport { InMemoryCache };","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/node_modules/@apollo/client/cache/inmemory/inMemoryCache.js"],"names":["__assign","__extends","dep","wrap","ApolloCache","MissingFieldError","addTypenameToDocument","isReference","StoreReader","StoreWriter","EntityStore","supportsResultCaching","makeVar","forgetCache","recallCache","defaultDataIdFromObject","Policies","hasOwn","defaultConfig","dataIdFromObject","addTypename","resultCaching","typePolicies","InMemoryCache","_super","config","_this","call","watches","Set","typenameDocumentCache","Map","txCount","maybeBroadcastWatch","c","fromOptimisticTransaction","broadcastWatch","makeCacheKey","store","optimistic","optimisticData","data","rootId","variables","query","callback","JSON","stringify","watchDep","policies","cache","possibleTypes","Root","storeWriter","storeReader","prototype","restore","replace","extract","read","options","_a","returnPartialData","diffQueryAgainstStore","result","e","write","writeToStore","dataId","broadcast","broadcastWatches","modify","id","fields","diff","watch","size","add","immediate","delete","dirty","forget","gc","retain","release","identify","object","__ref","evict","reset","clear","Promise","resolve","removeOptimistic","idToRemove","newOptimisticData","removeLayer","performTransaction","transaction","optimisticId","perform","layer","addLayer","transformDocument","document","get","set","forEach"],"mappings":"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","sourcesContent":["import { __assign, __extends } from \"tslib\";\nimport \"./fixPolyfills.js\";\nimport { dep, wrap } from 'optimism';\nimport { ApolloCache } from \"../core/cache.js\";\nimport { MissingFieldError } from \"../core/types/common.js\";\nimport { addTypenameToDocument, isReference, } from \"../../utilities/index.js\";\nimport { StoreReader } from \"./readFromStore.js\";\nimport { StoreWriter } from \"./writeToStore.js\";\nimport { EntityStore, supportsResultCaching } from \"./entityStore.js\";\nimport { makeVar, forgetCache, recallCache } from \"./reactiveVars.js\";\nimport { defaultDataIdFromObject, Policies, } from \"./policies.js\";\nimport { hasOwn } from \"./helpers.js\";\nvar defaultConfig = {\n    dataIdFromObject: defaultDataIdFromObject,\n    addTypename: true,\n    resultCaching: true,\n    typePolicies: {},\n};\nvar InMemoryCache = (function (_super) {\n    __extends(InMemoryCache, _super);\n    function InMemoryCache(config) {\n        if (config === void 0) { config = {}; }\n        var _this = _super.call(this) || this;\n        _this.watches = new Set();\n        _this.typenameDocumentCache = new Map();\n        _this.makeVar = makeVar;\n        _this.txCount = 0;\n        _this.maybeBroadcastWatch = wrap(function (c, fromOptimisticTransaction) {\n            return _this.broadcastWatch.call(_this, c, !!fromOptimisticTransaction);\n        }, {\n            makeCacheKey: function (c) {\n                var store = c.optimistic ? _this.optimisticData : _this.data;\n                if (supportsResultCaching(store)) {\n                    var optimistic = c.optimistic, rootId = c.rootId, variables = c.variables;\n                    return store.makeCacheKey(c.query, c.callback, JSON.stringify({ optimistic: optimistic, rootId: rootId, variables: variables }));\n                }\n            }\n        });\n        _this.watchDep = dep();\n        _this.config = __assign(__assign({}, defaultConfig), config);\n        _this.addTypename = !!_this.config.addTypename;\n        _this.policies = new Policies({\n            cache: _this,\n            dataIdFromObject: _this.config.dataIdFromObject,\n            possibleTypes: _this.config.possibleTypes,\n            typePolicies: _this.config.typePolicies,\n        });\n        _this.data = new EntityStore.Root({\n            policies: _this.policies,\n            resultCaching: _this.config.resultCaching,\n        });\n        _this.optimisticData = _this.data;\n        _this.storeWriter = new StoreWriter(_this, _this.storeReader = new StoreReader({\n            cache: _this,\n            addTypename: _this.addTypename,\n        }));\n        return _this;\n    }\n    InMemoryCache.prototype.restore = function (data) {\n        if (data)\n            this.data.replace(data);\n        return this;\n    };\n    InMemoryCache.prototype.extract = function (optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return (optimistic ? this.optimisticData : this.data).extract();\n    };\n    InMemoryCache.prototype.read = function (options) {\n        var _a = options.returnPartialData, returnPartialData = _a === void 0 ? false : _a;\n        try {\n            return this.storeReader.diffQueryAgainstStore({\n                store: options.optimistic ? this.optimisticData : this.data,\n                query: options.query,\n                variables: options.variables,\n                rootId: options.rootId,\n                config: this.config,\n                returnPartialData: returnPartialData,\n            }).result || null;\n        }\n        catch (e) {\n            if (e instanceof MissingFieldError) {\n                return null;\n            }\n            throw e;\n        }\n    };\n    InMemoryCache.prototype.write = function (options) {\n        try {\n            ++this.txCount;\n            return this.storeWriter.writeToStore({\n                store: this.data,\n                query: options.query,\n                result: options.result,\n                dataId: options.dataId,\n                variables: options.variables,\n            });\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.modify = function (options) {\n        if (hasOwn.call(options, \"id\") && !options.id) {\n            return false;\n        }\n        var store = options.optimistic\n            ? this.optimisticData\n            : this.data;\n        try {\n            ++this.txCount;\n            return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.diff = function (options) {\n        return this.storeReader.diffQueryAgainstStore({\n            store: options.optimistic ? this.optimisticData : this.data,\n            rootId: options.id || \"ROOT_QUERY\",\n            query: options.query,\n            variables: options.variables,\n            returnPartialData: options.returnPartialData,\n            config: this.config,\n        });\n    };\n    InMemoryCache.prototype.watch = function (watch) {\n        var _this = this;\n        if (!this.watches.size) {\n            recallCache(this);\n        }\n        this.watches.add(watch);\n        if (watch.immediate) {\n            this.maybeBroadcastWatch(watch);\n        }\n        return function () {\n            if (_this.watches.delete(watch) && !_this.watches.size) {\n                forgetCache(_this);\n            }\n            _this.watchDep.dirty(watch);\n            _this.maybeBroadcastWatch.forget(watch);\n        };\n    };\n    InMemoryCache.prototype.gc = function () {\n        return this.optimisticData.gc();\n    };\n    InMemoryCache.prototype.retain = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).retain(rootId);\n    };\n    InMemoryCache.prototype.release = function (rootId, optimistic) {\n        return (optimistic ? this.optimisticData : this.data).release(rootId);\n    };\n    InMemoryCache.prototype.identify = function (object) {\n        return isReference(object) ? object.__ref :\n            this.policies.identify(object)[0];\n    };\n    InMemoryCache.prototype.evict = function (options) {\n        if (!options.id) {\n            if (hasOwn.call(options, \"id\")) {\n                return false;\n            }\n            options = __assign(__assign({}, options), { id: \"ROOT_QUERY\" });\n        }\n        try {\n            ++this.txCount;\n            return this.optimisticData.evict(options);\n        }\n        finally {\n            if (!--this.txCount && options.broadcast !== false) {\n                this.broadcastWatches();\n            }\n        }\n    };\n    InMemoryCache.prototype.reset = function () {\n        this.data.clear();\n        this.optimisticData = this.data;\n        this.broadcastWatches();\n        return Promise.resolve();\n    };\n    InMemoryCache.prototype.removeOptimistic = function (idToRemove) {\n        var newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n        if (newOptimisticData !== this.optimisticData) {\n            this.optimisticData = newOptimisticData;\n            this.broadcastWatches();\n        }\n    };\n    InMemoryCache.prototype.performTransaction = function (transaction, optimisticId) {\n        var _this = this;\n        var perform = function (layer) {\n            var _a = _this, data = _a.data, optimisticData = _a.optimisticData;\n            ++_this.txCount;\n            if (layer) {\n                _this.data = _this.optimisticData = layer;\n            }\n            try {\n                transaction(_this);\n            }\n            finally {\n                --_this.txCount;\n                _this.data = data;\n                _this.optimisticData = optimisticData;\n            }\n        };\n        var fromOptimisticTransaction = false;\n        if (typeof optimisticId === 'string') {\n            this.optimisticData = this.optimisticData.addLayer(optimisticId, perform);\n            fromOptimisticTransaction = true;\n        }\n        else if (optimisticId === null) {\n            perform(this.data);\n        }\n        else {\n            perform();\n        }\n        this.broadcastWatches(fromOptimisticTransaction);\n    };\n    InMemoryCache.prototype.transformDocument = function (document) {\n        if (this.addTypename) {\n            var result = this.typenameDocumentCache.get(document);\n            if (!result) {\n                result = addTypenameToDocument(document);\n                this.typenameDocumentCache.set(document, result);\n                this.typenameDocumentCache.set(result, result);\n            }\n            return result;\n        }\n        return document;\n    };\n    InMemoryCache.prototype.broadcastWatches = function (fromOptimisticTransaction) {\n        var _this = this;\n        if (!this.txCount) {\n            this.watches.forEach(function (c) { return _this.maybeBroadcastWatch(c, fromOptimisticTransaction); });\n        }\n    };\n    InMemoryCache.prototype.broadcastWatch = function (c, fromOptimisticTransaction) {\n        this.watchDep.dirty(c);\n        this.watchDep(c);\n        var diff = this.diff({\n            query: c.query,\n            variables: c.variables,\n            optimistic: c.optimistic,\n        });\n        if (c.optimistic && fromOptimisticTransaction) {\n            diff.fromOptimisticTransaction = true;\n        }\n        c.callback(diff);\n    };\n    return InMemoryCache;\n}(ApolloCache));\nexport { InMemoryCache };\n//# sourceMappingURL=inMemoryCache.js.map"]},"metadata":{},"sourceType":"module"}