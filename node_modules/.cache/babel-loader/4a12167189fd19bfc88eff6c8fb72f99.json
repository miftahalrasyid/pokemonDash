{"ast":null,"code":"import _objectSpread from\"/Users/miftahalrasyid/Documents/GitHub/pokemonDash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/miftahalrasyid/Documents/GitHub/pokemonDash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/miftahalrasyid/Documents/GitHub/pokemonDash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/miftahalrasyid/Documents/GitHub/pokemonDash/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import PokemonCard from\"./PokemonCard\";// import PokemonCard,{Container} from \"./PokemonCard\";\nimport\"./PokemonList.css\";// import {Link} from \"react-router-dom\";\nimport{gql,useQuery}from'@apollo/client';// const Test = (data) =>{\n//     return <h3>test</h3>\n// }\n// window.addEventListener(\"beforeunload\", function(){\n//     localStorage.removeItem(\"myKey\");\n// });\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var GET_POKEMONS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query pokemons($limit: Int, $offset: Int) {\\n    pokemons(limit: $limit, offset: $offset) {\\n      count\\n      next\\n      previous\\n      status\\n      message\\n      results {\\n        url\\n        name\\n        image\\n      }\\n    }\\n  }\\n\"])));export var PokemonList=function PokemonList(){var FETCH_LIMIT=20;// let data1 = []\nvar smartscroll=React.useRef(null);var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),offset=_React$useState2[0],setOffset=_React$useState2[1];var _React$useState3=React.useState(FETCH_LIMIT),_React$useState4=_slicedToArray(_React$useState3,2),limit=_React$useState4[0],setLimit=_React$useState4[1];var _React$useState5=React.useState(JSON.parse(sessionStorage['myKey']||'[]')),_React$useState6=_slicedToArray(_React$useState5,2),apoloData=_React$useState6[0],setApoloData=_React$useState6[1];// const [dataFetch,setDataFetch] = React.useState(JSON.parse(sessionStorage['myKey'] || '[]'));\n// const [dataFetch,setDataFetch] = React.useState(JSON.parse(localStorage['myKey'] || '[]'));\n// const [dataFetch,setDataFetch] = React.useState( []);\nvar _React$useState7=React.useState(false),_React$useState8=_slicedToArray(_React$useState7,2),scrollFetch=_React$useState8[0],setScrollFetch=_React$useState8[1];// const [populate,setPopulate] = React.useState([<Test/>]);\n// var data2 = []\n// const Populate = () =>{\n//     return(populate)\n// }\nvar gqlVariables={limit:limit,offset:offset};var _useQuery=useQuery(GET_POKEMONS,{// const { loading, error, data } = useQuery(GET_POKEMONS, {\nvariables:gqlVariables}),data=_useQuery.data;// if (loading) return 'Loading...';\n// if (error) return `Error! ${error.message}`;\n// console.log('Response from server', data);\nReact.useEffect(function(){var _data$pokemons;// setApoloData(data?.pokemons?.results || []);\nif(data===null||data===void 0?void 0:(_data$pokemons=data.pokemons)===null||_data$pokemons===void 0?void 0:_data$pokemons.results){var data1=[];// console.log(dataFetch.length < limit)\n// console.log(sessionStorage['myKey'])\n// console.log(limit > apoloData.length)\n// console.log(data?.pokemons?.results)\nif(limit>apoloData.length){var _data$pokemons2;data1=[].concat(_toConsumableArray(apoloData),_toConsumableArray(data===null||data===void 0?void 0:(_data$pokemons2=data.pokemons)===null||_data$pokemons2===void 0?void 0:_data$pokemons2.results));setApoloData(data1);sessionStorage['myKey']=JSON.stringify(data1);}setScrollFetch(true);}// console.log(apoloData)\n// console.log(data?.pokemons?.results || [])\n},[data,limit,apoloData]);React.useEffect(function(){var _document$querySelect,_document$querySelect2;// console.log(document.querySelector(\".content\").scrollTop)\n// console.log(sessionStorage['myScroll'])\ndocument.querySelector(\".content\").scrollTop=parseInt(((_document$querySelect=document.querySelector(\"#\"+sessionStorage['myScroll']))===null||_document$querySelect===void 0?void 0:(_document$querySelect2=_document$querySelect.getBoundingClientRect())===null||_document$querySelect2===void 0?void 0:_document$querySelect2.y)||0);// console.log(document.querySelector(\"#\"+sessionStorage['myScroll'])?.getBoundingClientRect()?.y || 0 -parseInt(window.innerHeight))\n// console.log(parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight))\ndocument.querySelector(\".content\").scrollTop=parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight)/4;// smartscroll.scrollTop = sessionStorage['myScroll'];\n},[]);// React.useEffect(()=>{\n//     fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\n//     .then(res=>res.json())\n//     .then(data=>{\n//         // console.log(dataFetch)\n//         // data1 = [...dataFetch,...data.results];\n//         let data1 = []; \n//         // console.log(dataFetch.length < limit)\n//         // console.log(sessionStorage['myKey'])\n//         if(limit > dataFetch.length){\n//             data1 = [...dataFetch,...data.results]\n//             setDataFetch(data1);\n//             sessionStorage['myKey'] = JSON.stringify(data1);\n//         }\n//         // console.log(JSON.parse(sessionStorage['myKey'] || '[]'))\n//         // console.log(dataFetch)\n//         // localStorage.clear();\n//         // sessionStorage.clear();\n//         // let distinct = [...new Set(data1.map(a=>a.name))];\n//         // sessionStorage['myKey'] = JSON.stringify(distinct);\n//     // console.log(JSON.parse(localStorage['myKey']))\n//         // console.log(data1)\n//         // setDataFetch([...dataFetch, data.results]);\n//         setScrollFetch(true);\n//     });\n// },[limit])\n// },[scrollFetch])\n// React.useEffect(()=>{\n//     // var card = <PokemonCard dataset={data.name}/>\n//     for(let i=0; i<dataFetch.length; i++){\n//         data2 = [...data2,<PokemonCard {...dataFetch[i]}/>];\n//         // data2 = [...data2,<PokemonCard dataset={data.name}/>];\n//     }\n//     setPopulate(data2);\n//     // Populate({pokemondata: data2})\n//     console.log(dataFetch)\n// },[dataFetch])\nvar onPageScroll=function onPageScroll(ev){// console.log(sessionStorage['myScroll'])\n// console.log(document.querySelector(\"#\"+sessionStorage['myScroll']))\n// console.log(ev)\n/**scroll value */ // console.log(ev.target.scrollTop)\n// ev.target.scrollTop = parseInt(ev.target.scrollTop)-parseInt(window.innerHeight)\n/**scroll position */ // sessionStorage['myScroll'] = ev.target.scrollTop ;\n// console.log(sessionStorage['myScroll']) ;\n/** available scroll */ // console.log(ev.target.scrollHeight-ev.target.offsetHeight)\n// console.log((ev.target.scrollHeight-ev.target.offsetHeight)/2)\nif(ev.target.scrollTop>(ev.target.scrollHeight-ev.target.offsetHeight)/2&&scrollFetch){// let \n// fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50\")\n// .then(res=>res.json())\n// .then(data=>setDataFetch(data.results));\nsetOffset(offset+FETCH_LIMIT);setLimit(limit+FETCH_LIMIT);setScrollFetch(false);}};// console.log(Container)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"pokedex\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"PokeDex\"}),/*#__PURE__*/_jsx(\"section\",{className:\"content\",ref:smartscroll,onScroll:onPageScroll,children:apoloData.map(function(item,idx){return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(PokemonCard,_objectSpread({},item))},idx);})})]});};","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/GitHub/pokemonDash/src/PokemonList/PokemonList.js"],"names":["React","PokemonCard","gql","useQuery","GET_POKEMONS","PokemonList","FETCH_LIMIT","smartscroll","useRef","useState","offset","setOffset","limit","setLimit","JSON","parse","sessionStorage","apoloData","setApoloData","scrollFetch","setScrollFetch","gqlVariables","variables","data","useEffect","pokemons","results","data1","length","stringify","document","querySelector","scrollTop","parseInt","getBoundingClientRect","y","window","innerHeight","onPageScroll","ev","target","scrollHeight","offsetHeight","map","item","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PokemonCard from \"./PokemonCard\";\n// import PokemonCard,{Container} from \"./PokemonCard\";\nimport \"./PokemonList.css\";\n// import {Link} from \"react-router-dom\";\nimport { gql, useQuery } from '@apollo/client';\n// const Test = (data) =>{\n//     return <h3>test</h3>\n// }\n// window.addEventListener(\"beforeunload\", function(){\n//     localStorage.removeItem(\"myKey\");\n// });\nconst GET_POKEMONS = gql`\n  query pokemons($limit: Int, $offset: Int) {\n    pokemons(limit: $limit, offset: $offset) {\n      count\n      next\n      previous\n      status\n      message\n      results {\n        url\n        name\n        image\n      }\n    }\n  }\n`;\n\nexport const PokemonList = () => {\n\n    const FETCH_LIMIT = 20;\n    // let data1 = []\n    const smartscroll = React.useRef(null);\n    const [offset, setOffset] = React.useState(0);\n    const [limit, setLimit] = React.useState(FETCH_LIMIT);\n    const [apoloData,setApoloData] = React.useState(JSON.parse(sessionStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState(JSON.parse(sessionStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState(JSON.parse(localStorage['myKey'] || '[]'));\n    // const [dataFetch,setDataFetch] = React.useState( []);\n    const [scrollFetch,setScrollFetch] = React.useState(false);\n    // const [populate,setPopulate] = React.useState([<Test/>]);\n    // var data2 = []\n    // const Populate = () =>{\n    //     return(populate)\n    // }\n    const gqlVariables = {\n        limit: limit,\n        offset: offset,\n      };\n    const { data } = useQuery(GET_POKEMONS, {\n    // const { loading, error, data } = useQuery(GET_POKEMONS, {\n        variables: gqlVariables,\n    });\n    // if (loading) return 'Loading...';\n    // if (error) return `Error! ${error.message}`;\n    // console.log('Response from server', data);\n    React.useEffect(()=>{\n        // setApoloData(data?.pokemons?.results || []);\n        if(data?.pokemons?.results){\n            let data1 = []; \n            // console.log(dataFetch.length < limit)\n            // console.log(sessionStorage['myKey'])\n            // console.log(limit > apoloData.length)\n            // console.log(data?.pokemons?.results)\n            if(limit > apoloData.length){\n                data1 = [...apoloData,...data?.pokemons?.results]\n                setApoloData(data1);\n                sessionStorage['myKey'] = JSON.stringify(data1);\n                \n            }\n            setScrollFetch(true);\n        }\n        // console.log(apoloData)\n        // console.log(data?.pokemons?.results || [])\n    },[data,limit,apoloData])\n    \n    React.useEffect(()=>{\n        \n        // console.log(document.querySelector(\".content\").scrollTop)\n        // console.log(sessionStorage['myScroll'])\n        document.querySelector(\".content\").scrollTop = parseInt(document.querySelector(\"#\"+sessionStorage['myScroll'])?.getBoundingClientRect()?.y || 0);\n        // console.log(document.querySelector(\"#\"+sessionStorage['myScroll'])?.getBoundingClientRect()?.y || 0 -parseInt(window.innerHeight))\n        // console.log(parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight))\n        document.querySelector(\".content\").scrollTop = parseInt(document.querySelector(\".content\").scrollTop)-parseInt(window.innerHeight)/4;\n        // smartscroll.scrollTop = sessionStorage['myScroll'];\n    },[]);\n    // React.useEffect(()=>{\n    //     fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\n    //     .then(res=>res.json())\n    //     .then(data=>{\n    //         // console.log(dataFetch)\n    //         // data1 = [...dataFetch,...data.results];\n    //         let data1 = []; \n    //         // console.log(dataFetch.length < limit)\n    //         // console.log(sessionStorage['myKey'])\n    //         if(limit > dataFetch.length){\n    //             data1 = [...dataFetch,...data.results]\n    //             setDataFetch(data1);\n    //             sessionStorage['myKey'] = JSON.stringify(data1);\n    //         }\n    //         // console.log(JSON.parse(sessionStorage['myKey'] || '[]'))\n    //         // console.log(dataFetch)\n\n    //         // localStorage.clear();\n    //         // sessionStorage.clear();\n    //         // let distinct = [...new Set(data1.map(a=>a.name))];\n    //         // sessionStorage['myKey'] = JSON.stringify(distinct);\n    //     // console.log(JSON.parse(localStorage['myKey']))\n\n    //         // console.log(data1)\n    //         // setDataFetch([...dataFetch, data.results]);\n    //         setScrollFetch(true);\n    //     });\n    // },[limit])\n    // },[scrollFetch])\n  \n    // React.useEffect(()=>{\n    //     // var card = <PokemonCard dataset={data.name}/>\n    //     for(let i=0; i<dataFetch.length; i++){\n    //         data2 = [...data2,<PokemonCard {...dataFetch[i]}/>];\n    //         // data2 = [...data2,<PokemonCard dataset={data.name}/>];\n    //     }\n    //     setPopulate(data2);\n    //     // Populate({pokemondata: data2})\n    //     console.log(dataFetch)\n    // },[dataFetch])\n    const onPageScroll = (ev) => {\n        // console.log(sessionStorage['myScroll'])\n        // console.log(document.querySelector(\"#\"+sessionStorage['myScroll']))\n        // console.log(ev)\n        /**scroll value */\n        // console.log(ev.target.scrollTop)\n        // ev.target.scrollTop = parseInt(ev.target.scrollTop)-parseInt(window.innerHeight)\n        /**scroll position */\n        // sessionStorage['myScroll'] = ev.target.scrollTop ;\n        // console.log(sessionStorage['myScroll']) ;\n        /** available scroll */\n        // console.log(ev.target.scrollHeight-ev.target.offsetHeight)\n        // console.log((ev.target.scrollHeight-ev.target.offsetHeight)/2)\n        if(ev.target.scrollTop > (ev.target.scrollHeight-ev.target.offsetHeight)/2 && scrollFetch){\n            // let \n            // fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50\")\n            // .then(res=>res.json())\n            // .then(data=>setDataFetch(data.results));\n            setOffset(offset+FETCH_LIMIT);\n            setLimit(limit+FETCH_LIMIT);\n            setScrollFetch(false);\n\n        }\n    };\n    // console.log(Container)\n    return(\n        <div className=\"pokedex\">\n        <h1 className=\"title\">PokeDex</h1>\n        {/* <div className=\"main-header\">\n          <nav>\n            <ul>\n              <li><Link to=\"/\"><img src=\"/images/pokeball.png\" alt=\"pokeball\"/></Link></li>\n              \n              <li><Link to=\"/my-pokemon\">My Pokemon</Link></li>\n            </ul>\n          </nav>\n        </div> */}\n        <section className=\"content\" ref={smartscroll} onScroll={onPageScroll}>\n            {apoloData.map((item,idx)=>{\n                return(\n                    <React.Fragment key={idx}>\n                        <PokemonCard {...item} />\n                        {/* <hr/> */}\n                    </React.Fragment>\n                )\n            })}\n        </section>\n        {/* <Populate/> */}\n        \n        {/* <PokemonCard dataset={{name: \"miftah\", type:\"water\"}}/> */}\n            {/* <Container> */}\n                {/* test */}\n            {/* </Container> */}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}