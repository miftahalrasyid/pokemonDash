{"ast":null,"code":"var _jsxFileName = \"/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/src/PokemonList/PokemonList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PokemonCard, { Container } from \"./PokemonCard\";\nimport \"./PokemonList.css\"; // const Test = (data) =>{\n//     return <h3>test</h3>\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nwindow.addEventListener(\"beforeunload\", function () {\n  localStorage.removeItem(\"myKey\");\n});\nexport const PokemonList = () => {\n  _s();\n\n  const FETCH_LIMIT = 20;\n  let data1 = [];\n  const smartscroll = React.useRef(null);\n  const [offset, setOffset] = React.useState(0);\n  const [limit, setLimit] = React.useState(FETCH_LIMIT);\n  const [dataFetch, setDataFetch] = React.useState(JSON.parse(localStorage['myKey']) || []); // const [dataFetch,setDataFetch] = React.useState( []);\n\n  const [scrollFetch, setScrollFetch] = React.useState(false); // const [populate,setPopulate] = React.useState([<Test/>]);\n  // var data2 = []\n  // const Populate = () =>{\n  //     return(populate)\n  // }\n\n  React.useEffect(() => {\n    fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`).then(res => res.json()).then(data => {\n      // console.log(dataFetch)\n      data1 = [...dataFetch, ...data.results];\n      setDataFetch(data1); // localStorage.clear();\n      // sessionStorage.clear();\n\n      sessionStorage['myKey'] = JSON.stringify(data1.filter((item, index) => data1.indexOf(item) === index));\n      console.log(data1); // localStorage['myKey'] = JSON.stringify(data1);\n      // setDataFetch([...dataFetch, data.results]);\n\n      setScrollFetch(true);\n    });\n  }, [limit]); // },[scrollFetch])\n  // React.useEffect(()=>{\n  //     // var card = <PokemonCard dataset={data.name}/>\n  //     for(let i=0; i<dataFetch.length; i++){\n  //         data2 = [...data2,<PokemonCard {...dataFetch[i]}/>];\n  //         // data2 = [...data2,<PokemonCard dataset={data.name}/>];\n  //     }\n  //     setPopulate(data2);\n  //     // Populate({pokemondata: data2})\n  //     console.log(dataFetch)\n  // },[dataFetch])\n\n  const onPageScroll = ev => {\n    console.log(ev);\n    /**scroll value */\n\n    console.log(JSON.parse(sessionStorage['myKey']));\n    /** available scroll */\n    // console.log(ev.target.scrollHeight-ev.target.offsetHeight)\n    // console.log((ev.target.scrollHeight-ev.target.offsetHeight)/2)\n\n    if (ev.target.scrollTop > (ev.target.scrollHeight - ev.target.offsetHeight) / 2 && scrollFetch) {\n      // let \n      // fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50\")\n      // .then(res=>res.json())\n      // .then(data=>setDataFetch(data.results));\n      setOffset(offset + FETCH_LIMIT);\n      setLimit(limit + FETCH_LIMIT);\n      setScrollFetch(false);\n    }\n  };\n\n  console.log(Container);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokedex\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"PokeDex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"content\",\n      ref: smartscroll,\n      onScroll: onPageScroll,\n      children: dataFetch.map((item, idx) => {\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(PokemonCard, { ...item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokemonList, \"faQrRY8VJzNmDDnMCEQTFSU6ysg=\");\n\n_c = PokemonList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokemonList\");","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/src/PokemonList/PokemonList.js"],"names":["React","PokemonCard","Container","window","addEventListener","localStorage","removeItem","PokemonList","FETCH_LIMIT","data1","smartscroll","useRef","offset","setOffset","useState","limit","setLimit","dataFetch","setDataFetch","JSON","parse","scrollFetch","setScrollFetch","useEffect","fetch","then","res","json","data","results","sessionStorage","stringify","filter","item","index","indexOf","console","log","onPageScroll","ev","target","scrollTop","scrollHeight","offsetHeight","map","idx"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PokemonCard,{Container} from \"./PokemonCard\";\nimport \"./PokemonList.css\";\n// const Test = (data) =>{\n//     return <h3>test</h3>\n// }\nwindow.addEventListener(\"beforeunload\", function(){\n    localStorage.removeItem(\"myKey\");\n});\nexport const PokemonList = () => {\n\n    const FETCH_LIMIT = 20;\n    let data1 = []\n    const smartscroll = React.useRef(null);\n    const [offset, setOffset] = React.useState(0);\n    const [limit, setLimit] = React.useState(FETCH_LIMIT);\n    const [dataFetch,setDataFetch] = React.useState(JSON.parse(localStorage['myKey']) || []);\n    // const [dataFetch,setDataFetch] = React.useState( []);\n    const [scrollFetch,setScrollFetch] = React.useState(false);\n    // const [populate,setPopulate] = React.useState([<Test/>]);\n    // var data2 = []\n    // const Populate = () =>{\n    //     return(populate)\n    // }\n    React.useEffect(()=>{\n        fetch(`https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`)\n        .then(res=>res.json())\n        .then(data=>{\n            // console.log(dataFetch)\n            data1 = [...dataFetch,...data.results];\n            setDataFetch(data1);\n            // localStorage.clear();\n            // sessionStorage.clear();\n            sessionStorage['myKey'] = JSON.stringify(data1.filter((item,index)=>data1.indexOf(item)===index));\n            console.log(data1)\n            // localStorage['myKey'] = JSON.stringify(data1);\n            // setDataFetch([...dataFetch, data.results]);\n            setScrollFetch(true);\n        });\n    },[limit])\n    // },[scrollFetch])\n  \n    // React.useEffect(()=>{\n    //     // var card = <PokemonCard dataset={data.name}/>\n    //     for(let i=0; i<dataFetch.length; i++){\n    //         data2 = [...data2,<PokemonCard {...dataFetch[i]}/>];\n    //         // data2 = [...data2,<PokemonCard dataset={data.name}/>];\n    //     }\n    //     setPopulate(data2);\n    //     // Populate({pokemondata: data2})\n    //     console.log(dataFetch)\n    // },[dataFetch])\n    const onPageScroll = (ev) => {\n        console.log(ev)\n        /**scroll value */\n        console.log(JSON.parse(sessionStorage['myKey']))\n        /** available scroll */\n        // console.log(ev.target.scrollHeight-ev.target.offsetHeight)\n        // console.log((ev.target.scrollHeight-ev.target.offsetHeight)/2)\n        if(ev.target.scrollTop > (ev.target.scrollHeight-ev.target.offsetHeight)/2 && scrollFetch){\n            // let \n            // fetch(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=50\")\n            // .then(res=>res.json())\n            // .then(data=>setDataFetch(data.results));\n            setOffset(offset+FETCH_LIMIT);\n            setLimit(limit+FETCH_LIMIT);\n            setScrollFetch(false);\n\n        }\n    };\n    console.log(Container)\n    return(\n        <div className=\"pokedex\">\n        <h1 className=\"title\">PokeDex</h1>\n        <section className=\"content\" ref={smartscroll} onScroll={onPageScroll}>\n            {dataFetch.map((item,idx)=>{\n                return(\n                    <React.Fragment key={idx}>\n                        <PokemonCard {...item}/>\n                        {/* <hr/> */}\n                    </React.Fragment>\n                )\n            })}\n        </section>\n        {/* <Populate/> */}\n        \n        {/* <PokemonCard dataset={{name: \"miftah\", type:\"water\"}}/> */}\n            {/* <Container> */}\n                {/* test */}\n            {/* </Container> */}\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}