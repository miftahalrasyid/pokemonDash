{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport { compact } from \"../utilities/index.js\";\nimport { version } from \"../version.js\";\nimport { HttpLink } from \"../link/http/index.js\";\nimport { QueryManager } from \"./QueryManager.js\";\nimport { LocalState } from \"./LocalState.js\";\nvar hasSuggestedDevtools = false;\nexport function mergeOptions(defaults, options) {\n  return compact(defaults, options, options.variables && {\n    variables: __assign(__assign({}, defaults.variables), options.variables)\n  });\n}\n\nvar ApolloClient = function () {\n  function ApolloClient(options) {\n    var _this = this;\n\n    this.defaultOptions = {};\n    this.resetStoreCallbacks = [];\n    this.clearStoreCallbacks = [];\n    var uri = options.uri,\n        credentials = options.credentials,\n        headers = options.headers,\n        cache = options.cache,\n        _a = options.ssrMode,\n        ssrMode = _a === void 0 ? false : _a,\n        _b = options.ssrForceFetchDelay,\n        ssrForceFetchDelay = _b === void 0 ? 0 : _b,\n        _c = options.connectToDevTools,\n        connectToDevTools = _c === void 0 ? typeof window === 'object' && !window.__APOLLO_CLIENT__ && process.env.NODE_ENV !== 'production' : _c,\n        _d = options.queryDeduplication,\n        queryDeduplication = _d === void 0 ? true : _d,\n        defaultOptions = options.defaultOptions,\n        _e = options.assumeImmutableResults,\n        assumeImmutableResults = _e === void 0 ? false : _e,\n        resolvers = options.resolvers,\n        typeDefs = options.typeDefs,\n        fragmentMatcher = options.fragmentMatcher,\n        clientAwarenessName = options.name,\n        clientAwarenessVersion = options.version;\n    var link = options.link;\n\n    if (!link) {\n      link = uri ? new HttpLink({\n        uri: uri,\n        credentials: credentials,\n        headers: headers\n      }) : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" + \"in the options object. \\n\" + \"For more information, please visit: https://go.apollo.dev/c/docs\");\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(function () {\n        return _this.disableNetworkFetches = false;\n      }, ssrForceFetchDelay);\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    if (connectToDevTools && typeof window === 'object') {\n      window.__APOLLO_CLIENT__ = this;\n    }\n\n    if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n      hasSuggestedDevtools = true;\n\n      if (typeof window !== 'undefined' && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\n        var nav = window.navigator;\n        var ua = nav && nav.userAgent;\n        var url = void 0;\n\n        if (typeof ua === \"string\") {\n          if (ua.indexOf(\"Chrome/\") > -1) {\n            url = \"https://chrome.google.com/webstore/detail/\" + \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n          } else if (ua.indexOf(\"Firefox/\") > -1) {\n            url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n          }\n        }\n\n        if (url) {\n          invariant.log(\"Download the Apollo DevTools for a better development \" + \"experience: \" + url);\n        }\n      }\n    }\n\n    this.version = version;\n    this.localState = new LocalState({\n      cache: cache,\n      client: this,\n      resolvers: resolvers,\n      fragmentMatcher: fragmentMatcher\n    });\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      queryDeduplication: queryDeduplication,\n      ssrMode: ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName,\n        version: clientAwarenessVersion\n      },\n      localState: this.localState,\n      assumeImmutableResults: assumeImmutableResults,\n      onBroadcast: connectToDevTools ? function () {\n        if (_this.devToolsHookCb) {\n          _this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: _this.queryManager.getQueryStore(),\n              mutations: _this.queryManager.mutationStore || {}\n            },\n            dataWithOptimisticResults: _this.cache.extract(true)\n          });\n        }\n      } : void 0\n    });\n  }\n\n  ApolloClient.prototype.stop = function () {\n    this.queryManager.stop();\n  };\n\n  ApolloClient.prototype.watchQuery = function (options) {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    if (this.disableNetworkFetches && (options.fetchPolicy === 'network-only' || options.fetchPolicy === 'cache-and-network')) {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.watchQuery(options);\n  };\n\n  ApolloClient.prototype.query = function (options) {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 10) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' + 'client.query can only return a single result. Please use client.watchQuery ' + 'to receive multiple results from the cache and the network, or consider ' + 'using a different fetchPolicy, such as cache-first or network-only.');\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = __assign(__assign({}, options), {\n        fetchPolicy: 'cache-first'\n      });\n    }\n\n    return this.queryManager.query(options);\n  };\n\n  ApolloClient.prototype.mutate = function (options) {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n\n    return this.queryManager.mutate(options);\n  };\n\n  ApolloClient.prototype.subscribe = function (options) {\n    return this.queryManager.startGraphQLSubscription(options);\n  };\n\n  ApolloClient.prototype.readQuery = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readQuery(options, optimistic);\n  };\n\n  ApolloClient.prototype.readFragment = function (options, optimistic) {\n    if (optimistic === void 0) {\n      optimistic = false;\n    }\n\n    return this.cache.readFragment(options, optimistic);\n  };\n\n  ApolloClient.prototype.writeQuery = function (options) {\n    this.cache.writeQuery(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.writeFragment = function (options) {\n    this.cache.writeFragment(options);\n    this.queryManager.broadcastQueries();\n  };\n\n  ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n    this.devToolsHookCb = cb;\n  };\n\n  ApolloClient.prototype.__requestRaw = function (payload) {\n    return execute(this.link, payload);\n  };\n\n  ApolloClient.prototype.resetStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.resetStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    }).then(function () {\n      return _this.reFetchObservableQueries();\n    });\n  };\n\n  ApolloClient.prototype.clearStore = function () {\n    var _this = this;\n\n    return Promise.resolve().then(function () {\n      return _this.queryManager.clearStore();\n    }).then(function () {\n      return Promise.all(_this.clearStoreCallbacks.map(function (fn) {\n        return fn();\n      }));\n    });\n  };\n\n  ApolloClient.prototype.onResetStore = function (cb) {\n    var _this = this;\n\n    this.resetStoreCallbacks.push(cb);\n    return function () {\n      _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.onClearStore = function (cb) {\n    var _this = this;\n\n    this.clearStoreCallbacks.push(cb);\n    return function () {\n      _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) {\n        return c !== cb;\n      });\n    };\n  };\n\n  ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  };\n\n  ApolloClient.prototype.extract = function (optimistic) {\n    return this.cache.extract(optimistic);\n  };\n\n  ApolloClient.prototype.restore = function (serializedState) {\n    return this.cache.restore(serializedState);\n  };\n\n  ApolloClient.prototype.addResolvers = function (resolvers) {\n    this.localState.addResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.setResolvers = function (resolvers) {\n    this.localState.setResolvers(resolvers);\n  };\n\n  ApolloClient.prototype.getResolvers = function () {\n    return this.localState.getResolvers();\n  };\n\n  ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  };\n\n  ApolloClient.prototype.setLink = function (newLink) {\n    this.link = this.queryManager.link = newLink;\n  };\n\n  return ApolloClient;\n}();\n\nexport { ApolloClient };","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/node_modules/@apollo/client/core/ApolloClient.js"],"names":["__assign","invariant","InvariantError","ApolloLink","execute","compact","version","HttpLink","QueryManager","LocalState","hasSuggestedDevtools","mergeOptions","defaults","options","variables","ApolloClient","_this","defaultOptions","resetStoreCallbacks","clearStoreCallbacks","uri","credentials","headers","cache","_a","ssrMode","_b","ssrForceFetchDelay","_c","connectToDevTools","window","__APOLLO_CLIENT__","process","env","NODE_ENV","_d","queryDeduplication","_e","assumeImmutableResults","resolvers","typeDefs","fragmentMatcher","clientAwarenessName","name","clientAwarenessVersion","link","empty","disableNetworkFetches","setTimeout","watchQuery","bind","query","mutate","resetStore","reFetchObservableQueries","document","top","self","__APOLLO_DEVTOOLS_GLOBAL_HOOK__","nav","navigator","ua","userAgent","url","indexOf","log","localState","client","queryManager","clientAwareness","onBroadcast","devToolsHookCb","action","state","queries","getQueryStore","mutations","mutationStore","dataWithOptimisticResults","extract","prototype","stop","fetchPolicy","subscribe","startGraphQLSubscription","readQuery","optimistic","readFragment","writeQuery","broadcastQueries","writeFragment","__actionHookForDevTools","cb","__requestRaw","payload","Promise","resolve","then","clearStore","all","map","fn","onResetStore","push","filter","c","onClearStore","includeStandby","restore","serializedState","addResolvers","setResolvers","getResolvers","setLocalStateFragmentMatcher","setFragmentMatcher","setLink","newLink"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { ApolloLink, execute } from \"../link/core/index.js\";\nimport { compact } from \"../utilities/index.js\";\nimport { version } from \"../version.js\";\nimport { HttpLink } from \"../link/http/index.js\";\nimport { QueryManager } from \"./QueryManager.js\";\nimport { LocalState, } from \"./LocalState.js\";\nvar hasSuggestedDevtools = false;\nexport function mergeOptions(defaults, options) {\n    return compact(defaults, options, options.variables && {\n        variables: __assign(__assign({}, defaults.variables), options.variables),\n    });\n}\nvar ApolloClient = (function () {\n    function ApolloClient(options) {\n        var _this = this;\n        this.defaultOptions = {};\n        this.resetStoreCallbacks = [];\n        this.clearStoreCallbacks = [];\n        var uri = options.uri, credentials = options.credentials, headers = options.headers, cache = options.cache, _a = options.ssrMode, ssrMode = _a === void 0 ? false : _a, _b = options.ssrForceFetchDelay, ssrForceFetchDelay = _b === void 0 ? 0 : _b, _c = options.connectToDevTools, connectToDevTools = _c === void 0 ? typeof window === 'object' &&\n            !window.__APOLLO_CLIENT__ &&\n            process.env.NODE_ENV !== 'production' : _c, _d = options.queryDeduplication, queryDeduplication = _d === void 0 ? true : _d, defaultOptions = options.defaultOptions, _e = options.assumeImmutableResults, assumeImmutableResults = _e === void 0 ? false : _e, resolvers = options.resolvers, typeDefs = options.typeDefs, fragmentMatcher = options.fragmentMatcher, clientAwarenessName = options.name, clientAwarenessVersion = options.version;\n        var link = options.link;\n        if (!link) {\n            link = uri\n                ? new HttpLink({ uri: uri, credentials: credentials, headers: headers })\n                : ApolloLink.empty();\n        }\n        if (!cache) {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"To initialize Apollo Client, you must specify a 'cache' property \" +\n                \"in the options object. \\n\" +\n                \"For more information, please visit: https://go.apollo.dev/c/docs\");\n        }\n        this.link = link;\n        this.cache = cache;\n        this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n        this.queryDeduplication = queryDeduplication;\n        this.defaultOptions = defaultOptions || {};\n        this.typeDefs = typeDefs;\n        if (ssrForceFetchDelay) {\n            setTimeout(function () { return (_this.disableNetworkFetches = false); }, ssrForceFetchDelay);\n        }\n        this.watchQuery = this.watchQuery.bind(this);\n        this.query = this.query.bind(this);\n        this.mutate = this.mutate.bind(this);\n        this.resetStore = this.resetStore.bind(this);\n        this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n        if (connectToDevTools && typeof window === 'object') {\n            window.__APOLLO_CLIENT__ = this;\n        }\n        if (!hasSuggestedDevtools && process.env.NODE_ENV !== 'production') {\n            hasSuggestedDevtools = true;\n            if (typeof window !== 'undefined' &&\n                window.document &&\n                window.top === window.self &&\n                !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {\n                var nav = window.navigator;\n                var ua = nav && nav.userAgent;\n                var url = void 0;\n                if (typeof ua === \"string\") {\n                    if (ua.indexOf(\"Chrome/\") > -1) {\n                        url = \"https://chrome.google.com/webstore/detail/\" +\n                            \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n                    }\n                    else if (ua.indexOf(\"Firefox/\") > -1) {\n                        url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n                    }\n                }\n                if (url) {\n                    invariant.log(\"Download the Apollo DevTools for a better development \" +\n                        \"experience: \" + url);\n                }\n            }\n        }\n        this.version = version;\n        this.localState = new LocalState({\n            cache: cache,\n            client: this,\n            resolvers: resolvers,\n            fragmentMatcher: fragmentMatcher,\n        });\n        this.queryManager = new QueryManager({\n            cache: this.cache,\n            link: this.link,\n            queryDeduplication: queryDeduplication,\n            ssrMode: ssrMode,\n            clientAwareness: {\n                name: clientAwarenessName,\n                version: clientAwarenessVersion,\n            },\n            localState: this.localState,\n            assumeImmutableResults: assumeImmutableResults,\n            onBroadcast: connectToDevTools ? function () {\n                if (_this.devToolsHookCb) {\n                    _this.devToolsHookCb({\n                        action: {},\n                        state: {\n                            queries: _this.queryManager.getQueryStore(),\n                            mutations: _this.queryManager.mutationStore || {},\n                        },\n                        dataWithOptimisticResults: _this.cache.extract(true),\n                    });\n                }\n            } : void 0,\n        });\n    }\n    ApolloClient.prototype.stop = function () {\n        this.queryManager.stop();\n    };\n    ApolloClient.prototype.watchQuery = function (options) {\n        if (this.defaultOptions.watchQuery) {\n            options = mergeOptions(this.defaultOptions.watchQuery, options);\n        }\n        if (this.disableNetworkFetches &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.watchQuery(options);\n    };\n    ApolloClient.prototype.query = function (options) {\n        if (this.defaultOptions.query) {\n            options = mergeOptions(this.defaultOptions.query, options);\n        }\n        process.env.NODE_ENV === \"production\" ? invariant(options.fetchPolicy !== 'cache-and-network', 10) : invariant(options.fetchPolicy !== 'cache-and-network', 'The cache-and-network fetchPolicy does not work with client.query, because ' +\n            'client.query can only return a single result. Please use client.watchQuery ' +\n            'to receive multiple results from the cache and the network, or consider ' +\n            'using a different fetchPolicy, such as cache-first or network-only.');\n        if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n            options = __assign(__assign({}, options), { fetchPolicy: 'cache-first' });\n        }\n        return this.queryManager.query(options);\n    };\n    ApolloClient.prototype.mutate = function (options) {\n        if (this.defaultOptions.mutate) {\n            options = mergeOptions(this.defaultOptions.mutate, options);\n        }\n        return this.queryManager.mutate(options);\n    };\n    ApolloClient.prototype.subscribe = function (options) {\n        return this.queryManager.startGraphQLSubscription(options);\n    };\n    ApolloClient.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readQuery(options, optimistic);\n    };\n    ApolloClient.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.cache.readFragment(options, optimistic);\n    };\n    ApolloClient.prototype.writeQuery = function (options) {\n        this.cache.writeQuery(options);\n        this.queryManager.broadcastQueries();\n    };\n    ApolloClient.prototype.writeFragment = function (options) {\n        this.cache.writeFragment(options);\n        this.queryManager.broadcastQueries();\n    };\n    ApolloClient.prototype.__actionHookForDevTools = function (cb) {\n        this.devToolsHookCb = cb;\n    };\n    ApolloClient.prototype.__requestRaw = function (payload) {\n        return execute(this.link, payload);\n    };\n    ApolloClient.prototype.resetStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.resetStoreCallbacks.map(function (fn) { return fn(); })); })\n            .then(function () { return _this.reFetchObservableQueries(); });\n    };\n    ApolloClient.prototype.clearStore = function () {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () { return _this.queryManager.clearStore(); })\n            .then(function () { return Promise.all(_this.clearStoreCallbacks.map(function (fn) { return fn(); })); });\n    };\n    ApolloClient.prototype.onResetStore = function (cb) {\n        var _this = this;\n        this.resetStoreCallbacks.push(cb);\n        return function () {\n            _this.resetStoreCallbacks = _this.resetStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.onClearStore = function (cb) {\n        var _this = this;\n        this.clearStoreCallbacks.push(cb);\n        return function () {\n            _this.clearStoreCallbacks = _this.clearStoreCallbacks.filter(function (c) { return c !== cb; });\n        };\n    };\n    ApolloClient.prototype.reFetchObservableQueries = function (includeStandby) {\n        return this.queryManager.reFetchObservableQueries(includeStandby);\n    };\n    ApolloClient.prototype.extract = function (optimistic) {\n        return this.cache.extract(optimistic);\n    };\n    ApolloClient.prototype.restore = function (serializedState) {\n        return this.cache.restore(serializedState);\n    };\n    ApolloClient.prototype.addResolvers = function (resolvers) {\n        this.localState.addResolvers(resolvers);\n    };\n    ApolloClient.prototype.setResolvers = function (resolvers) {\n        this.localState.setResolvers(resolvers);\n    };\n    ApolloClient.prototype.getResolvers = function () {\n        return this.localState.getResolvers();\n    };\n    ApolloClient.prototype.setLocalStateFragmentMatcher = function (fragmentMatcher) {\n        this.localState.setFragmentMatcher(fragmentMatcher);\n    };\n    ApolloClient.prototype.setLink = function (newLink) {\n        this.link = this.queryManager.link = newLink;\n    };\n    return ApolloClient;\n}());\nexport { ApolloClient };\n//# sourceMappingURL=ApolloClient.js.map"]},"metadata":{},"sourceType":"module"}