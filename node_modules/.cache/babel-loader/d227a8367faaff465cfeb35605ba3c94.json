{"ast":null,"code":"var _jsxFileName = \"/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/src/PokemonList/PokemonCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './PokemonCard.css';\nimport { gql, useQuery } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = prop => {\n  const {\n    children\n  } = prop;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-container\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Container;\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name){\n        id\n        name\n        moves {\n          move {\n            name\n          }\n        }\n        species{\n            url\n            name\n        }\n        types {\n            slot\n          type {\n              url\n            name\n          }\n        }\n        sprites{\n            front_default\n          }\n        message\n        status\n      }\n  }\n`;\n\nconst PokemonCard = dataset => {\n  _s();\n\n  const scrollpos = React.useRef(null);\n  const [apolloPokemon, setApolloPokemon] = React.useState([]);\n  const [pokemonDetail, setPokemonDetail] = React.useState([]);\n  const [pokemonImage, setPokemonImage] = React.useState(\"\"); // React.useEffect(()=>{\n  //     // console.log(dataset.url)\n  //     fetch(dataset.url)\n  //     .then(res=>res.json())\n  //     .then(data=>setPokemonDetail(data));\n  //     // console.log(scrollpos.scrollTop)\n  // },[])\n\n  let gqlVariables = {\n    name: dataset.name\n  };\n  const {\n    error,\n    data\n  } = useQuery(GET_POKEMON, {\n    variables: gqlVariables\n  });\n  if (error) console.log(`Error! ${error.message}`); // console.log(data);\n\n  React.useEffect(() => {\n    var _data$pokemon, _data$pokemon$sprites;\n\n    // console.log(data?.pokemon || [])\n    setApolloPokemon((data === null || data === void 0 ? void 0 : (_data$pokemon = data.pokemon) === null || _data$pokemon === void 0 ? void 0 : (_data$pokemon$sprites = _data$pokemon.sprites) === null || _data$pokemon$sprites === void 0 ? void 0 : _data$pokemon$sprites.front_default) || []); // console.log(apolloPokemon)\n    // console.log(data?.pokemon?.sprites?.front_default || [])\n  }, [data]);\n  React.useEffect(() => {\n    // console.log(dataset.url)\n    if (pokemonDetail.length !== 0) {\n      // console.log(pokemonDetail)\n      // console.log(pokemonDetail.sprites)\n      // console.log(pokemonDetail.sprites.other)\n      // console.log(pokemonDetail.sprites.other['official-artwork'])\n      // console.log(pokemonDetail.sprites.other['official-artwork'].front_default)\n      setPokemonImage(pokemonDetail === null || pokemonDetail === void 0 ? void 0 : pokemonDetail.sprites.other['official-artwork'].front_default);\n    }\n  }, [pokemonDetail]);\n\n  const onSelectedClick = ev => {\n    // console.log(\"target\")\n    // console.log(ev.target.parentNode.parentNode.id)\n    // console.log(ev.target.parentNode.parentNode.id.split('/'))\n    // console.log(ev.target.getBoundingClientRect().y)\n    sessionStorage['myScroll'] = ev.target.parentNode.parentNode.id.split('/'); // sessionStorage['myScroll'] = ev.target.getBoundingClientRect().y;\n  };\n\n  if (dataset) {\n    // console.log(dataset)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      id: \"card-\" + dataset.url.split(\"/\")[6],\n      ref: scrollpos,\n      onClick: onSelectedClick,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/pokemon/\" + dataset.name,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: apolloPokemon,\n          alt: apolloPokemon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 57\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dataset.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 103\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this);\n  }\n\n  return {\n    Container\n  };\n};\n\n_s(PokemonCard, \"o2iZu9TtiRjq5AC6HrB+k/xzp0M=\", false, function () {\n  return [useQuery];\n});\n\n_c2 = PokemonCard;\nexport default PokemonCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PokemonCard\");","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/src/PokemonList/PokemonCard.js"],"names":["React","Link","gql","useQuery","Container","prop","children","GET_POKEMON","PokemonCard","dataset","scrollpos","useRef","apolloPokemon","setApolloPokemon","useState","pokemonDetail","setPokemonDetail","pokemonImage","setPokemonImage","gqlVariables","name","error","data","variables","console","log","message","useEffect","pokemon","sprites","front_default","length","other","onSelectedClick","ev","sessionStorage","target","parentNode","id","split","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './PokemonCard.css';\nimport { gql, useQuery } from '@apollo/client';\n\nexport const Container = (prop) => {\n    const {children} = prop;\n    return (\n    <div className=\"card-container\">\n        {children}\n    </div>\n    )\n}\nconst GET_POKEMON = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name){\n        id\n        name\n        moves {\n          move {\n            name\n          }\n        }\n        species{\n            url\n            name\n        }\n        types {\n            slot\n          type {\n              url\n            name\n          }\n        }\n        sprites{\n            front_default\n          }\n        message\n        status\n      }\n  }\n`;\nconst PokemonCard = (dataset) => {\n    const scrollpos = React.useRef(null);\n    const [apolloPokemon,setApolloPokemon] = React.useState([])\n    const [pokemonDetail, setPokemonDetail] = React.useState([])\n    const [pokemonImage,setPokemonImage] = React.useState(\"\");\n    // React.useEffect(()=>{\n    //     // console.log(dataset.url)\n    //     fetch(dataset.url)\n    //     .then(res=>res.json())\n    //     .then(data=>setPokemonDetail(data));\n    //     // console.log(scrollpos.scrollTop)\n    // },[])\n    let gqlVariables = {\n        name: dataset.name\n    }\n    const {error,data} = useQuery(GET_POKEMON,{\n        variables: gqlVariables\n    })\n    if (error) console.log( `Error! ${error.message}`);\n    // console.log(data);\n    React.useEffect(()=>{\n        // console.log(data?.pokemon || [])\n        setApolloPokemon(data?.pokemon?.sprites?.front_default || [])\n        // console.log(apolloPokemon)\n        // console.log(data?.pokemon?.sprites?.front_default || [])\n    },[data])\n    React.useEffect(()=>{\n        // console.log(dataset.url)\n        if(pokemonDetail.length!==0){\n            // console.log(pokemonDetail)\n\n            // console.log(pokemonDetail.sprites)\n            // console.log(pokemonDetail.sprites.other)\n            // console.log(pokemonDetail.sprites.other['official-artwork'])\n            // console.log(pokemonDetail.sprites.other['official-artwork'].front_default)\n            setPokemonImage(pokemonDetail?.sprites.other['official-artwork'].front_default)\n        }\n    },[pokemonDetail])\n    const onSelectedClick = (ev) =>{\n        // console.log(\"target\")\n        // console.log(ev.target.parentNode.parentNode.id)\n        // console.log(ev.target.parentNode.parentNode.id.split('/'))\n        // console.log(ev.target.getBoundingClientRect().y)\n        sessionStorage['myScroll'] = ev.target.parentNode.parentNode.id.split('/');\n        // sessionStorage['myScroll'] = ev.target.getBoundingClientRect().y;\n    }\n    if(dataset){\n        // console.log(dataset)\n        \n        return (\n                <div className=\"card-container\" id={\"card-\"+dataset.url.split(\"/\")[6]} ref={scrollpos} onClick={onSelectedClick}>\n                    \n                    <Link to={\"/pokemon/\"+dataset.name}><img src={apolloPokemon} alt={apolloPokemon}/><p>{dataset.name}</p></Link>\n                    {/* <Route path=\"/pokemon/:type\" component={GetPokemonDetail}/> */}\n                </div>\n        )\n    }\n    return {Container}\n};\n\nexport default PokemonCard;"]},"metadata":{},"sourceType":"module"}