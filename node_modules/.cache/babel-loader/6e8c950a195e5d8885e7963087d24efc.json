{"ast":null,"code":"import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n  return isReference(objectOrReference) ? store.get(objectOrReference.__ref, \"__typename\") : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n  var match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n  if (result && typeof result === \"object\") {\n    return Array.isArray(result) ? result.every(function (item) {\n      return selectionSetMatchesResult(selectionSet, item, variables);\n    }) : selectionSet.selections.every(function (field) {\n      if (isField(field) && shouldInclude(field, variables)) {\n        var key = resultKeyNameFromField(field);\n        return hasOwn.call(result, key) && (!field.selectionSet || selectionSetMatchesResult(field.selectionSet, result[key], variables));\n      }\n\n      return true;\n    });\n  }\n\n  return false;\n}\nexport function storeValueIsStoreObject(value) {\n  return value !== null && typeof value === \"object\" && !isReference(value) && !Array.isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger();\n}","map":{"version":3,"sources":["/Users/miftahalrasyid/Documents/kerja/personal/Tokopedia/pokeman/node_modules/@apollo/client/cache/inmemory/helpers.js"],"names":["isReference","isField","DeepMerger","resultKeyNameFromField","shouldInclude","hasOwn","Object","prototype","hasOwnProperty","getTypenameFromStoreObject","store","objectOrReference","get","__ref","__typename","TypeOrFieldNameRegExp","fieldNameFromStoreName","storeFieldName","match","selectionSetMatchesResult","selectionSet","result","variables","Array","isArray","every","item","selections","field","key","call","storeValueIsStoreObject","value","makeProcessedFieldsMerger"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,UAA/B,EAA2CC,sBAA3C,EAAmEC,aAAnE,QAAyF,0BAAzF;AACA,OAAO,IAAIC,MAAM,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA9B;AACP,OAAO,SAASC,0BAAT,CAAoCC,KAApC,EAA2CC,iBAA3C,EAA8D;AACjE,SAAOX,WAAW,CAACW,iBAAD,CAAX,GACDD,KAAK,CAACE,GAAN,CAAUD,iBAAiB,CAACE,KAA5B,EAAmC,YAAnC,CADC,GAEDF,iBAAiB,IAAIA,iBAAiB,CAACG,UAF7C;AAGH;AACD,OAAO,IAAIC,qBAAqB,GAAG,oBAA5B;AACP,OAAO,SAASC,sBAAT,CAAgCC,cAAhC,EAAgD;AACnD,MAAIC,KAAK,GAAGD,cAAc,CAACC,KAAf,CAAqBH,qBAArB,CAAZ;AACA,SAAOG,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAcD,cAA1B;AACH;AACD,OAAO,SAASE,yBAAT,CAAmCC,YAAnC,EAAiDC,MAAjD,EAAyDC,SAAzD,EAAoE;AACvE,MAAID,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAAhC,EAA0C;AACtC,WAAOE,KAAK,CAACC,OAAN,CAAcH,MAAd,IACDA,MAAM,CAACI,KAAP,CAAa,UAAUC,IAAV,EAAgB;AAAE,aAAOP,yBAAyB,CAACC,YAAD,EAAeM,IAAf,EAAqBJ,SAArB,CAAhC;AAAkE,KAAjG,CADC,GAEDF,YAAY,CAACO,UAAb,CAAwBF,KAAxB,CAA8B,UAAUG,KAAV,EAAiB;AAC7C,UAAI3B,OAAO,CAAC2B,KAAD,CAAP,IAAkBxB,aAAa,CAACwB,KAAD,EAAQN,SAAR,CAAnC,EAAuD;AACnD,YAAIO,GAAG,GAAG1B,sBAAsB,CAACyB,KAAD,CAAhC;AACA,eAAOvB,MAAM,CAACyB,IAAP,CAAYT,MAAZ,EAAoBQ,GAApB,MACF,CAACD,KAAK,CAACR,YAAP,IACGD,yBAAyB,CAACS,KAAK,CAACR,YAAP,EAAqBC,MAAM,CAACQ,GAAD,CAA3B,EAAkCP,SAAlC,CAF1B,CAAP;AAGH;;AACD,aAAO,IAAP;AACH,KARC,CAFN;AAWH;;AACD,SAAO,KAAP;AACH;AACD,OAAO,SAASS,uBAAT,CAAiCC,KAAjC,EAAwC;AAC3C,SAAOA,KAAK,KAAK,IAAV,IACH,OAAOA,KAAP,KAAiB,QADd,IAEH,CAAChC,WAAW,CAACgC,KAAD,CAFT,IAGH,CAACT,KAAK,CAACC,OAAN,CAAcQ,KAAd,CAHL;AAIH;AACD,OAAO,SAASC,yBAAT,GAAqC;AACxC,SAAO,IAAI/B,UAAJ,EAAP;AACH","sourcesContent":["import { isReference, isField, DeepMerger, resultKeyNameFromField, shouldInclude, } from \"../../utilities/index.js\";\nexport var hasOwn = Object.prototype.hasOwnProperty;\nexport function getTypenameFromStoreObject(store, objectOrReference) {\n    return isReference(objectOrReference)\n        ? store.get(objectOrReference.__ref, \"__typename\")\n        : objectOrReference && objectOrReference.__typename;\n}\nexport var TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\nexport function fieldNameFromStoreName(storeFieldName) {\n    var match = storeFieldName.match(TypeOrFieldNameRegExp);\n    return match ? match[0] : storeFieldName;\n}\nexport function selectionSetMatchesResult(selectionSet, result, variables) {\n    if (result && typeof result === \"object\") {\n        return Array.isArray(result)\n            ? result.every(function (item) { return selectionSetMatchesResult(selectionSet, item, variables); })\n            : selectionSet.selections.every(function (field) {\n                if (isField(field) && shouldInclude(field, variables)) {\n                    var key = resultKeyNameFromField(field);\n                    return hasOwn.call(result, key) &&\n                        (!field.selectionSet ||\n                            selectionSetMatchesResult(field.selectionSet, result[key], variables));\n                }\n                return true;\n            });\n    }\n    return false;\n}\nexport function storeValueIsStoreObject(value) {\n    return value !== null &&\n        typeof value === \"object\" &&\n        !isReference(value) &&\n        !Array.isArray(value);\n}\nexport function makeProcessedFieldsMerger() {\n    return new DeepMerger;\n}\n//# sourceMappingURL=helpers.js.map"]},"metadata":{},"sourceType":"module"}